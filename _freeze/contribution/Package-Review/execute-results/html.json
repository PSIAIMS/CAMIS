{
  "hash": "ec7a0fb8e51eaba986ad50dd43ee3d7e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"How to Choose an R Stats Package\"\n---\n\n\n\nWhen you want to implement statistical methodology in R and you don't already know the package that does the method, it can be difficult to figure out the \"best\" package. Sometimes when you google a method, the top result is the package with wording that matches closest to what you typed into google, rather than the package that is \"best\" for the method. You don't want to waste time looking deeply into a package only to find there is a more common and robust R package out there for the same method. So before you go down a rabbit hole on one package, it is worth checking a few packages. But, how do you \"check\" a package. This blog post will go through a worked example of comparing packages and a checklist of things to look at when comparing packages in the future.\n\n## Package Checklist\n\nWhen looking at a package the first place to start is the CRAN index page. You can find this by googling CRAN and name of the package. From there you want to ask yourself the following questions:\n\n-   Is this package being actively maintained?\n\n-   Is the author known in the field?\n\n    -   Is there more than one author?\n\n-   Does the package have adequate documentation?\n\n    -   Are there references to external peer reviewed papers?\n\n    -   Is there a website / vignettes?\n\n-   Is there a way to report bugs?\n\n-   Can the packages handle different edge cases?\n\n-   Does the package have a lot of dependencies / unusual dependencies?\n\n-   Look at community adoption?\n\nUsing this checklist can help you quickly and consistently get a sense of a package before spending time looking into the code directly. Let's see how this works in practice.\n\n## Worked Example: Wilcoxon Rank-Sum Test\n\nFor this, we are going to look at the Wilcoxon Rank-Sum test and the associated Hodges-Lehmann confidence interval. After googling a bit, I found three different packages that do a Wilcoxon Rank-Sum p-value and Hodges-Lehmann CI:\n\n1.  {stats} (part of base R)\n\n2.  {pairwiseCI}\n\n3.  {coin}\n\nGreat! I might be kind of done, because I tend to favor base R stats functions, but as I start looking into this, I found the {stats} function can't handle ties if I want the exact methods. So I need to look into and compare the {pairwiseCI} and {coin} packages.\n\n::: callout-tip\nYou often find that differences between packages and software show up when there are ties, missing data, and/or extreme values, so it is good to try to include these in the dataset you are using to compare.\n:::\n\nNow I need to choose between {pairwaiseCI} and {coin}. I could just run the model in both and see if the results match, but that will be a lot of work. So before I get started I want to go through our checklist.\n\nLet's pull up the CRAN index pages for each of these packages and see if we can figure out which package we should use for this analysis.\n\n### {pairwiseCI}\n\nStarting with {pairwiseCI}, the [index](https://cran.r-project.org/web/packages/pairwiseCI/index.html) page looks like this:\n\n![](images/clipboard-4202698305.png)\n\nNow let's go down the checklist to see if there are any red flags for this package.\n\n-   Is this package being actively maintained?\n\n    <p style=\"color:blue;\">\n\n    The last update to this package was 2019-03-11, so over 6 years at the writing of this post. That indicates this probably isn't being actively maintained.\n\n    </p>\n\n-   Is the author known in the field?\n\n    <p style=\"color:blue;\">\n\n    Personally, I don't know this author, but it looks like he does work in a biostatistics department at a university, so that is a really good sign. When you are looking at the author you don't need to go super in-depth, but if you don't know who they are it can be good to check their qualifications.\n\n    </p>\n\n    -   Is there more than one author?\n\n        <p style=\"color:blue;\">\n\n        Yes, it looks like there are two authors here. This can be good to check because it can mean the burden of maintaining the package is shared and the documentation has potentially been peer reviewed.\n\n        </p>\n\n-   Does the package have adequate documentation?\n\n    <p style=\"color:blue;\">\n\n    This can be hard to determine from just this index page, but the sub-questions can help here.\n\n    </p>\n\n    -   Are there references to external peer reviewed papers?\n\n        <p style=\"color:blue;\">\n\n        On the index there are no references, but there might be some references on the function level. Really it just means they haven't published a paper about this package.\n\n        </p>\n\n    -   Is there a website / Vignettes?\n\n        <p style=\"color:blue;\">\n\n        There isn't a website or vingettes. This means all the documenation will be limited to just the functions, which can be harder to understand.\n\n        </p>\n\n-   Is there a way to report bugs?\n\n    <p style=\"color:blue;\">\n\n    There doesn't appear to be a standard way to report bugs. If this package was on github or something similar, I would be able to check any issues there to see if others had similar problems or if the issue was caused by user error and has a quick fix.\n\n    </p>\n\n-   Can the packages handle different edge cases?\n\n    <p style=\"color:blue;\">\n\n    The description doesn't say anything about handling special cases. But, I did find this package because it can handle ties in the exact case.\n\n    </p>\n\n-   Does the package have a lot of dependencies / unusual dependencies?\n\n    <p style=\"color:blue;\">\n\n    It looks like this package only has two dependencies, {MCPAN} and, interestingly, {coin}, the other package we are looking at.\n\n    </p>\n\nOkay, having gone through all but the final question, I would say I feel not amazing about the package, but if it was my only option I would still try to use it. The author gives me confidence in the package, but other things like documentation and last update date, make me a bit nervous about this package.\n\n### {coin}\n\nNow on to {coin} with the same questions. The [index](https://cran.r-project.org/web/packages/coin/index.html) page is as follows:\n\n![](images/clipboard-1725037014.png)\n\n-   Is this package being actively maintained?\n\n    <p style=\"color:blue;\">\n\n    The last update to this package was 2023-09-27, so more recently than {pairwiseCI}.\n\n    </p>\n\n-   Is the author known in the field?\n\n    <p style=\"color:blue;\">\n\n    Again, I don't know the author, but he has an R-project.org email, which indicates he is very involved in the R ecosystem and is a very good sign.\n\n    </p>\n\n    -   Is there more than one author?\n\n        <p style=\"color:blue;\">\n\n        Yes, there are 5 different authors, so lots of eyes on bugs and documentation.\n\n        </p>\n\n-   Does the package have adequate documentation?\n\n    <p style=\"color:blue;\">\n\n    Again, this can be hard to determine from just this index page, but the sub-questions can help here.\n\n    </p>\n\n    -   Are there references to external peer reviewed papers?\n\n        <p style=\"color:blue;\">\n\n        Yes, there is a peer reviewed paper in the description of this package.\n\n        </p>\n\n    -   Is there a website / Vignettes?\n\n        <p style=\"color:blue;\">\n\n        While there isn't a website here, there are four different vignettes.\n\n        </p>\n\n-   Is there a way to report bugs?\n\n    <p style=\"color:blue;\">\n\n    Like with the other package, there doesn't appear to be a standard way to report bugs.\n\n    </p>\n\n-   Can the packages handle different edge cases?\n\n    <p style=\"color:blue;\">\n\n    Same as above. It doesn't directly said it can handle our edge case, but I know it can.\n\n    </p>\n\n-   Does the package have a lot of dependencies / unusual dependencies?\n\n    <p style=\"color:blue;\">\n\n    While this package has more dependencies, all the dependencies are very standard and do not raise any red flags for me\n\n    </p>\n\nHaving gone through most the questions, I am fairly confident in saying I want to use {coin} to investigate this method rather than {pairwiseCI}. For almost all the questions {coin} looks slightly better than {pairwiseCI} and really just has a larger accumulation of evidence of quality. But, I haven't answered the last question in my checklist for either these packages. What about community adoption? It can be a bit hard to look at directly, but I tend to use a few different ways.\n\nFirst, staying on the CRAN index page for the package, I look at the Reverse Dependencies. This section gets split into three parts, \"Reverse depends\", \"Reverse imports\", and \"Reverse suggests\" which explains how the other packages are using the package. In terms of community adoption, it doesn't matter if other packages are depending, importing or suggesting the package, all that matters is they are using it. **Note:** This section only appears if other packages on CRAN use the package.\n\nFor these two packages, only {coin} has this section and we can see there are many other packages that use {coin}.\n\n![](images/clipboard-118256266.png)\n\nThe next thing I will check is the number of downloads. This can easily be done with the following bit of code:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncranlogs::cran_downloads(package = c(\"coin\", \"pairwiseCI\"))\n```\n:::\n\n\n\n![](images/clipboard-3979687165.png)\n\nAnd you can see {coin} is much more popular than {pairwiseCI}.\n\nSo with all of this information, I think starting with {coin} is going to be the best use of my time.\n\nWhen looking at the number of downloads, you can look over a longer period like over the last month (by using the `when` parameter) or you can look between specific dates (by using the `from` and `to` parameters). But, it will give you the download numbers for each day, which you will need to summaries. These day-by-day numbers can be very helpful to look at trends, especially when there is a new package that is getting rapidly adopted.\n\nThe checklist isn't intended to replace a full review of the package for an GxP workflows. But, when just trying to decide which package to look into for a particular stats method it can be helpful.\n\nIn summary, selecting the appropriate R package for statistical analyses is hard. Google, isn't perfect and so it worth finding a few packages and going through this checklist. By taking a few minutes to consider factors like maintenance, documentation, and community adoption can save you time in the long run.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}