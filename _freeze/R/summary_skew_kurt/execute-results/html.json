{
  "hash": "434be01a65245a05ef2c28be6b1b8733",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Skewness/Kurtosis\"\noutput: html_document\n---\n\n\n\n\n\n# **Skewness and Kurtosis in R**\n\nSkewness measures the the amount of asymmetry in a distribution, while Kurtosis describes the \"tailedness\" of the curve.\nThese measures are frequently used to assess the normality of the data.\nThere are several methods to calculate these measures.  In R, there are at least four different packages that contain functions\nfor Skewness and Kurtosis.  This write-up will examine the following packages: **e1071**, **moments**, **procs**, \nand **sasLM**.\n\n## Data Used\n\nThe following data was used in this example.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create sample data\ndat <- tibble::tribble(\n  ~team, ~points, ~assists,\n  \"A\", 10, 2,\n  \"A\", 17, 5,\n  \"A\", 17, 6,\n  \"A\", 18, 3,\n  \"A\", 15, 0,\n  \"B\", 10, 2,\n  \"B\", 14, 5,\n  \"B\", 13, 4,\n  \"B\", 29, 0,\n  \"B\", 25, 2,\n  \"C\", 12, 1,\n  \"C\", 30, 1,\n  \"C\", 34, 3,\n  \"C\", 12, 4,\n  \"C\", 11, 7 \n)\n```\n:::\n\n\n\n## Package Examination \n\nBase R and the **stats** package have no native functions for Skewness and Kurtosis. It is therefore necessary to use a packaged\nfunction to calculate these statistics. The packages examined use three different methods of calculating Skewness, and four different methods\nfor calculating Kurtosis.  Of the available packages, the functions in the **e1071** package provide the most \nflexibility, and have options for three of the different methodologies.\n\n### e1071 Package {#e1071}\n\nThe **e1071** package contains miscellaneous statistical functions from the Probability Theory Group at the Vienna University of Technology.\nThe package includes functions for both Skewness and Kurtosis, and each function has a \"type\" parameter to specify the method.  There are \nthree available methods for Skewness, and three methods for Kurtosis. A portion of the documentation for these functions is included below:\n\n#### Skewness \n\nThe documentation for the `skewness()` function describes three types of skewness calculations:\nJoanes and Gill (1998) discusses three methods for estimating skewness:\n\n-   Type 1: This is the typical definition used in many older textbooks\n\n$$g_1 = m_1/m_2^{3/2}$$\n\n-   Type 2: Used in SAS and SPSS\n\n    $$\n    G_1 = g_1\\sqrt{n(n-1)}/(n-2)\n    $$\n\n-   Type 3: Used in MINITAB and BMDP\n\n    $$\n    b_1 = m_3/s^3 = g_1((n-1)/n)^{3/2}\n    $$\n\nAll three skewness measures are unbiased under normality. The three methods are illustrated in the following code:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntype1 <- e1071::skewness(dat$points, type = 1)\nstringr::str_glue(\"Skewness - Type 1: {type1}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSkewness - Type 1: 0.905444204379853\n```\n\n\n:::\n\n```{.r .cell-code}\ntype2 <- e1071::skewness(dat$points, type = 2)\nstringr::str_glue(\"Skewness - Type 2: {type2}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSkewness - Type 2: 1.00931792987094\n```\n\n\n:::\n\n```{.r .cell-code}\ntype3 <- e1071::skewness(dat$points, type = 3)\nstringr::str_glue(\"Skewness - Type 3: {type3}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSkewness - Type 3: 0.816426058828937\n```\n\n\n:::\n:::\n\n\nThe default for the **e1071** `skewness()` function is Type 3.\n\n#### Kurtosis\n\nThe documentation for the `kurtosis()` function describes three types of kurtosis calculations:\nJoanes and Gill (1998) discuss three methods for estimating kurtosis:\n\n-   Type 1: This is the typical definition used in many older textbooks\n\n$$g_2 = m_4/m_2^{2}-3$$\n\n-   Type 2: Used in SAS and SPSS\n\n    $$G_2 = ((n+1)g_2+6)*\\frac{(n-1)}{(n-2)(n-3)}$$\n\n-   Type 3: Used in MINITAB and BMDP\n\n    $$b_2 = m_4/s^4-3 = (g_2 + 3)(1-1/n)^2-3$$\n\nOnly $G_2$ (corresponding to type 2) is unbiased under normality. The three methods are illustrated in the following code:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  # Kurtosis - Type 1\ntype1 <- e1071::kurtosis(dat$points, type = 1)\nstringr::str_glue(\"Kurtosis - Type 1: {type1}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nKurtosis - Type 1: -0.583341077124784\n```\n\n\n:::\n\n```{.r .cell-code}\n# Kurtosis - Type 2\ntype2 <- e1071::kurtosis(dat$points, type = 2)\nstringr::str_glue(\"Kurtosis - Type 2: {type2}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nKurtosis - Type 2: -0.299156418435587\n```\n\n\n:::\n\n```{.r .cell-code}\n# Kurtosis - Type 3\ntype3 <- e1071::kurtosis(dat$points, type = 3)\nstringr::str_glue(\"Kurtosis - Type 3: {type3}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nKurtosis - Type 3: -0.894821560517589\n```\n\n\n:::\n:::\n\n\nThe default for the **e1071** `kurtosis()` function is Type 3.\n\n### Moments Package {#moments}\n\nThe **moments** package is a well-known package with a variety of statistical functions.  The package contains functions for\nboth Skewness and Kurtosis.  But these functions provide no \"type\" option.  The `skewness()` function in the **moments** package\ncorresponds to Type 1 above.  The `kurtosis()` function uses a Pearson's measure of Kurtosis, which corresponds to none of the\nthree types in the **e1071** package.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  library(moments)\n\n  # Skewness - Type 1\n  moments::skewness(dat$points)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9054442\n```\n\n\n:::\n\n```{.r .cell-code}\n  # [1] 0.9054442\n  \n  # Kurtosis - Pearson's measure\n  moments::kurtosis(dat$points)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2.416659\n```\n\n\n:::\n\n```{.r .cell-code}\n  # [1] 2.416659\n```\n:::\n\n\nNote that neither of the functions from the **moments** package match SAS.\n\n### Procs Package {#procs}\n\nThe **procs** package `proc_means()` function was written specifically to match SAS, and produces a Type 2 Skewness and Type 2 Kurtosis.\nThis package also produces a data frame output, instead of a scalar value.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  library(procs)\n\n  # Skewness and Kurtosis - Type 2 \n  proc_means(dat, var = points,\n             stats = v(skew, kurt))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 Ã— 5\n   TYPE  FREQ VAR     SKEW   KURT\n  <dbl> <int> <chr>  <dbl>  <dbl>\n1     0    15 points  1.01 -0.299\n```\n\n\n:::\n:::\n\n\n\n\nViewer Output:\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](../images/summarystats/procs_skewness_kurtosis.png){fig-align='center' width=30%}\n:::\n:::\n\n\n\n### sasLM Package {#sasLM}\n\nThe **sasLM** package was also written specifically to match SAS.  The `Skewness()` function produces a Type 2 Skewness,\nand the `Kurtosis()` function a Type 2 Kurtosis.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  library(sasLM)\n\n  # Skewness - Type 2\n  Skewness(dat$points)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.009318\n```\n\n\n:::\n\n```{.r .cell-code}\n  # [1] 1.009318\n  \n  # Kurtosis - Type 2\n  Kurtosis(dat$points)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -0.2991564\n```\n\n\n:::\n\n```{.r .cell-code}\n  # [1] -0.2991564\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}