{
  "hash": "2dd9e75941025cf34f2528f3640ba6a7",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Non-parametric point estimation\"\n---\n\n\n\n\n\n# Introduction\n\nThe Hodges-Lehman estimator (Hodges and Lehmann 1962) provides a point estimate which is associated with the Wilcoxon rank sum statistics based on location shift. This is typically used for the 2-sample comparison with small sample size. Note: The Hodges-Lehman estimates the median of the difference and not the difference of the medians. The corresponding distribution-free confidence interval is also based on the Wilcoxon rank sum statistics (Moses).\n\nThere are several packages covering this functionality. However, we will focus on the wilcox.test function implemented in R base. The {coin} package provides further resources to derive various types of confidence intervals for the pairwise comparison case. This package is very flexible and uses the functions of related packages.\n\n*Hodges, J. L. and Lehmann, E. L. (1962) Rank methods for combination of independent experiments in analysis of variance. Annals of Mathematical Statistics, 33, 482-4.*\n\n# Case study\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Hollander-Wolfe-Chicken Example\nx <- c(1.83, 0.50, 1.62, 2.48, 1.68, 1.88, 1.55, 3.06, 1.30)\ny <- c(0.878, 0.647, 0.598, 2.050, 1.060, 1.290, 1.060, 3.140, 1.290)\n\n# Reshaping data\nvalue <- c(x, y)\ntreat<- c(rep(\"A\", length(x)), rep(\"B\", length(y)))\nall <- data.frame(value)\nall$treat <- treat\n```\n:::\n\n\n\n# Hodges-Lehmann estimate (and confidence interval)\n\n## {base}\n\nThe base function provides the Hodges-Lehmann estimate and the Moses confidence interval. The function will provide warnings in case of ties in the data and will not provide the exact confidence interval.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwt <- wilcox.test(x, y, exact = TRUE, conf.int = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in wilcox.test.default(x, y, exact = TRUE, conf.int = TRUE): cannot\ncompute exact p-value with ties\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in wilcox.test.default(x, y, exact = TRUE, conf.int = TRUE): cannot\ncompute exact confidence intervals with ties\n```\n\n\n:::\n\n```{.r .cell-code}\n# Hodges-Lehmann estimator\nwt$estimate\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ndifference in location \n             0.5600562 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Moses confidence interval\nwt$conf.int\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -0.3699774  1.1829708\nattr(,\"conf.level\")\n[1] 0.95\n```\n\n\n:::\n:::\n\n\n\n**Note**: You can process the long format also for *wilcox.test* using the formula structure:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwilcox.test(all$value ~ all$treat, exact = TRUE, conf.int = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in wilcox.test.default(x = DATA[[1L]], y = DATA[[2L]], ...): cannot\ncompute exact p-value with ties\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in wilcox.test.default(x = DATA[[1L]], y = DATA[[2L]], ...): cannot\ncompute exact confidence intervals with ties\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tWilcoxon rank sum test with continuity correction\n\ndata:  all$value by all$treat\nW = 58, p-value = 0.1329\nalternative hypothesis: true location shift is not equal to 0\n95 percent confidence interval:\n -0.3699774  1.1829708\nsample estimates:\ndifference in location \n             0.5600562 \n```\n\n\n:::\n:::\n\n\n\n## {pairwiseCI}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwilcox_test(value ~ as.factor(treat), data = all, \n           conf.int = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tAsymptotic Wilcoxon-Mann-Whitney Test\n\ndata:  value by as.factor(treat) (A, B)\nZ = 1.5469, p-value = 0.1219\nalternative hypothesis: true mu is not equal to 0\n95 percent confidence interval:\n -0.220  1.082\nsample estimates:\ndifference in location \n                  0.56 \n```\n\n\n:::\n:::\n",
    "supporting": [
      "nparestimate_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}