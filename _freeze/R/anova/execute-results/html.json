{
  "hash": "d34fd6102b76b42d4acb1e0197095ee5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"ANOVA\"\n---\n\n\n\n## Introduction\n\nANOVA (Analysis of Variance) is a statistical method used to compare the means of three or more groups to determine if at least one group mean is significantly different from the others. It helps to test hypotheses about group differences based on sample data.\n\nThe key assumptions include:\n\n-   Independence of observations\n-   Normality of the data (the distribution should be approximately normal)\n-   Homogeneity of variances (similar variances across groups)\n\nCommon types include one-way ANOVA (one independent variable) and two-way ANOVA (two independent variables).\n\nOne-way ANOVA tests the effect of a single independent variable on a dependent variable (the grouping factor).\n\nTwo-way ANOVA tests the effect of two independent variables on a dependent variable and also examines if there is an interaction between the two independent variables.\n\n### **Getting Started**\n\nTo demonstrate the various types of sums of squares, we'll create a data frame called `df_disease` taken from the SAS documentation. The corresponding data can be found [here](https://github.com/PSIAIMS/CAMIS/blob/main/data/sas_disease.csv).\n\n\n\n\n\n\n\n### The Model {.unnumbered}\n\nFor this example, we're testing for a significant difference in `stem_length` using ANOVA. In R, we're using `lm()` to run the ANOVA, and then using `broom::glance()` and `broom::tidy()` to view the results in a table format.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_model <- lm(y ~ drug + disease + drug*disease, df_disease)\n```\n:::\n\n\n\nThe `glance` function gives us a summary of the model diagnostic values.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_model %>% \n  glance() \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 12\n  r.squared adj.r.squared sigma statistic p.value    df logLik   AIC   BIC\n      <dbl>         <dbl> <dbl>     <dbl>   <dbl> <dbl>  <dbl> <dbl> <dbl>\n1     0.456         0.326  10.5      3.51 0.00130    11  -212.  450.  477.\n# ℹ 3 more variables: deviance <dbl>, df.residual <int>, nobs <int>\n```\n\n\n:::\n:::\n\n\n\nThe `tidy` function gives a summary of the model results.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_model %>% tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 5\n   term           estimate std.error statistic      p.value\n   <chr>             <dbl>     <dbl>     <dbl>        <dbl>\n 1 (Intercept)      29.3        4.29    6.84   0.0000000160\n 2 drug2            -1.33       6.36   -0.210  0.835       \n 3 drug3           -13          7.43   -1.75   0.0869      \n 4 drug4           -15.7        6.36   -2.47   0.0172      \n 5 disease2         -1.08       6.78   -0.160  0.874       \n 6 disease3         -8.93       6.36   -1.40   0.167       \n 7 drug2:disease2    6.58       9.78    0.673  0.504       \n 8 drug3:disease2  -10.9       10.2    -1.06   0.295       \n 9 drug4:disease2    0.317      9.30    0.0340 0.973       \n10 drug2:disease3   -0.900      9.00   -0.100  0.921       \n11 drug3:disease3    1.10      10.2     0.107  0.915       \n12 drug4:disease3    9.53       9.20    1.04   0.306       \n```\n\n\n:::\n:::\n\n\n\n### The Results {.unnumbered}\n\nYou'll see that R print the individual results for each level of the drug and disease interaction. We can get the combined F table in R using the `anova()` function on the model object.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_model %>% \n  anova() %>% \n  tidy() \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 6\n  term            df sumsq meansq statistic    p.value\n  <chr>        <int> <dbl>  <dbl>     <dbl>      <dbl>\n1 drug             3 3133.  1044.      9.46  0.0000558\n2 disease          2  419.   209.      1.90  0.162    \n3 drug:disease     6  707.   118.      1.07  0.396    \n4 Residuals       46 5081.   110.     NA    NA        \n```\n\n\n:::\n:::\n\n\n\nWe can add a `Total` row, by using `add_row` and calculating the sum of the degrees of freedom and sum of squares.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_model %>%\n  anova() %>%\n  tidy() %>%\n  add_row(term = \"Total\", df = sum(.$df), sumsq = sum(.$sumsq)) %>% \n  kable()\n```\n\n::: {.cell-output-display}\n\n\n|term         | df|     sumsq|    meansq| statistic|   p.value|\n|:------------|--:|---------:|---------:|---------:|---------:|\n|drug         |  3| 3133.2385| 1044.4128|  9.455761| 0.0000558|\n|disease      |  2|  418.8337|  209.4169|  1.895990| 0.1617201|\n|drug:disease |  6|  707.2663|  117.8777|  1.067225| 0.3958458|\n|Residuals    | 46| 5080.8167|  110.4525|        NA|        NA|\n|Total        | 57| 9340.1552|        NA|        NA|        NA|\n\n\n:::\n:::\n\n\n\n### Sums of Squares Tables {.unnumbered}\n\n### rstatix\n\nUnfortunately, it is not easy to get the various types of sums of squares calculations in using functions from base R. However, the `rstatix` package offers a solution to produce these various sums of squares tables. For each type, you supply the original dataset and model to the. `anova_test` function, then specify the type and se `detailed = TRUE`.\n\n#### Type I\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_disease %>% \n  rstatix::anova_test(\n    y ~ drug + disease + drug*disease, \n    type = 1, \n    detailed = TRUE) %>% \n  rstatix::get_anova_table() %>% \n  kable()\n```\n\n::: {.cell-output-display}\n\n\n|Effect       | DFn| DFd|      SSn|      SSd|     F|        p|p<.05 |   ges|\n|:------------|---:|---:|--------:|--------:|-----:|--------:|:-----|-----:|\n|drug         |   3|  46| 3133.239| 5080.817| 9.456| 5.58e-05|*     | 0.381|\n|disease      |   2|  46|  418.834| 5080.817| 1.896| 1.62e-01|      | 0.076|\n|drug:disease |   6|  46|  707.266| 5080.817| 1.067| 3.96e-01|      | 0.122|\n\n\n:::\n:::\n\n\n\n#### Type II {.unnumbered}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_disease %>% \n  rstatix::anova_test(\n    y ~ drug + disease + drug*disease, \n    type = 2, \n    detailed = TRUE) %>% \n  rstatix::get_anova_table() %>% \n  kable()\n```\n\n::: {.cell-output-display}\n\n\n|Effect       |      SSn|      SSd| DFn| DFd|     F|        p|p<.05 |   ges|\n|:------------|--------:|--------:|---:|---:|-----:|--------:|:-----|-----:|\n|drug         | 3063.433| 5080.817|   3|  46| 9.245| 6.75e-05|*     | 0.376|\n|disease      |  418.834| 5080.817|   2|  46| 1.896| 1.62e-01|      | 0.076|\n|drug:disease |  707.266| 5080.817|   6|  46| 1.067| 3.96e-01|      | 0.122|\n\n\n:::\n:::\n\n\n\n#### Type III {.unnumbered}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_disease %>% \n  rstatix::anova_test(\n    y ~ drug + disease + drug*disease, \n    type = 3, \n    detailed = TRUE) %>% \n  rstatix::get_anova_table() %>% \n  kable()\n```\n\n::: {.cell-output-display}\n\n\n|Effect       |       SSn|      SSd| DFn| DFd|       F|        p|p<.05 |   ges|\n|:------------|---------:|--------:|---:|---:|-------:|--------:|:-----|-----:|\n|(Intercept)  | 20037.613| 5080.817|   1|  46| 181.414| 0.00e+00|*     | 0.798|\n|drug         |  2997.472| 5080.817|   3|  46|   9.046| 8.09e-05|*     | 0.371|\n|disease      |   415.873| 5080.817|   2|  46|   1.883| 1.64e-01|      | 0.076|\n|drug:disease |   707.266| 5080.817|   6|  46|   1.067| 3.96e-01|      | 0.122|\n\n\n:::\n:::\n\n\n\n#### Type IV {.unnumbered}\n\nIn R there is no equivalent operation to the `Type IV` sums of squares calculation in SAS.\n\n### car\n\nAs an alternative to the `rstatix` package, you can use the `car` package, which is the R package for \"An R Companion to Applied Regression, Third Edition, Sage 2019\"\n\n#### Type I {.unnumbered}\n\nType I can come directly from `stats`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanova(lm_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnalysis of Variance Table\n\nResponse: y\n             Df Sum Sq Mean Sq F value   Pr(>F)    \ndrug          3 3133.2 1044.41  9.4558 5.58e-05 ***\ndisease       2  418.8  209.42  1.8960   0.1617    \ndrug:disease  6  707.3  117.88  1.0672   0.3958    \nResiduals    46 5080.8  110.45                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n\n#### Type II {.unnumbered}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nAnova(lm_model, type = \"II\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnova Table (Type II tests)\n\nResponse: y\n             Sum Sq Df F value    Pr(>F)    \ndrug         3063.4  3  9.2451 6.748e-05 ***\ndisease       418.8  2  1.8960    0.1617    \ndrug:disease  707.3  6  1.0672    0.3958    \nResiduals    5080.8 46                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n\n#### Type III {.unnumbered}\n\nFor type III tests the linear model we have used above does not make sense if the contrasts are orthogonal in the row-basis. The default contrast term `contr.treatment` are not, so the contrast should be changed. If you want to match the procedure in SAS use contr\\.sum, contr\\.poly. This can be either set as an option.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\noptions(contrasts = c(\"contr.sum\", \"contr.poly\"))\n```\n:::\n\n\n\nOr, set directly in the model statement using the `contrasts` argument\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_model <- lm(y ~ drug + disease + drug*disease, df_disease, \n              contrasts = list(drug = \"contr.sum\", disease = \"contr.poly\"))\ncar::Anova(lm_model, type = \"III\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnova Table (Type III tests)\n\nResponse: y\n              Sum Sq Df  F value    Pr(>F)    \n(Intercept)  20037.6  1 181.4138 < 2.2e-16 ***\ndrug          2997.5  3   9.0460 8.086e-05 ***\ndisease        415.9  2   1.8826    0.1637    \ndrug:disease   707.3  6   1.0672    0.3958    \nResiduals     5080.8 46                       \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n\n`rstatix` does this is by default. The `rstatix` package uses the `car` package to do the anova calculation, but can be nicer to use as it handles the contrasts for you and is more \"pipe-able\".\n\n### Contrasts {.unnumbered}\nThe easiest way to get contrasts in R is by using `emmeans`. For looking at contrast we are going to fit a different model on new data, that doesn't include an interaction term as it is easier to calculate contrasts without an interaction term. For this dataset we have three different drugs A, C, and E.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_trial<- read.csv(\"../data/drug_trial.csv\")\n\nlm(formula = post ~ pre + drug, data = df_trial) %>% \n  emmeans(\"drug\") %>% \n  contrast(method = list(\n    \"C vs A\"  = c(-1,  1, 0),\n    \"E vs CA\" = c(-1, -1, 2)\n  ))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n contrast estimate   SE df t.ratio p.value\n C vs A      0.109 1.80 26   0.061  0.9521\n E vs CA     6.783 3.28 26   2.067  0.0488\n```\n\n\n:::\n:::\n",
    "supporting": [
      "anova_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}