{
  "hash": "7071de222d88aac85b3ac3d2969448d0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"One Sample t-test\"\n---\n\n\n\n\n\nThe One Sample t-test is used to compare a single sample against an expected hypothesis value. In the One Sample t-test, the mean of the sample is compared against the hypothesis value. In R, a One Sample t-test can be performed using the Base R `t.test()` from the **stats** package or the `proc_ttest()` function from the **procs** package.\n\n### Data Used\n\nThe following data was used in this example.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create sample data\nread <- tibble::tribble(\n  ~score, ~count,\n  40, 2,   47, 2,   52, 2,   26, 1,   19, 2,\n  25, 2,   35, 4,   39, 1,   26, 1,   48, 1,\n  14, 2,   22, 1,   42, 1,   34, 2 ,  33, 2,\n  18, 1,   15, 1,   29, 1,   41, 2,   44, 1,\n  51, 1,   43, 1,   27, 2,   46, 2,   28, 1,\n  49, 1,   31, 1,   28, 1,   54, 1,   45, 1\n)\n```\n:::\n\n\n\n## Normal Data {#normal}\n\nBy default, the R one sample t-test functions assume normality in the data and use a classic Student's t-test.\n\n### Base R\n\n#### Code\n\nThe following code was used to test the comparison in Base R. Note that the baseline null hypothesis goes in the \"mu\" parameter.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Perform t-test\nstats::t.test(read$score, mu = 30)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tOne Sample t-test\n\ndata:  read$score\nt = 2.3643, df = 29, p-value = 0.02497\nalternative hypothesis: true mean is not equal to 30\n95 percent confidence interval:\n 30.67928 39.38739\nsample estimates:\nmean of x \n 35.03333 \n```\n\n\n:::\n:::\n\n\n\n### Procs Package\n\n#### Code\n\nThe following code from the **procs** package was used to perform a one sample t-test. Note that the null hypothesis value goes in the \"options\" parameter.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(procs)\n\n# Perform t-test\nprocs::proc_ttest(read, var = score, options = c(\"h0\" = 30))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$Statistics\n    VAR  N     MEAN      STD   STDERR MIN MAX\n1 score 30 35.03333 11.66038 2.128884  14  54\n\n$ConfLimits\n    VAR     MEAN     LCLM     UCLM      STD  LCLMSTD  UCLMSTD\n1 score 35.03333 30.67928 39.38739 11.66038 9.286404 15.67522\n\n$TTests\n    VAR DF        T     PROBT\n1 score 29 2.364306 0.0249741\n```\n\n\n:::\n:::\n\n\n\nViewer Output:\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](../images/ttest/onesample_rtest1.png){fig-align='center' width=50%}\n:::\n:::\n\n\n\n## Lognormal Data {#lognormal}\n\nThe Base R `t.test()` function does not have an option for lognormal data. Likewise, the **procs** `proc_ttest()` function also does not have an option for lognormal data.\n\nOne possibility may be the `tTestLnormAltPower()` function from the **EnvStats** package. This package has not been evaluated yet.\n\n::: {.callout-note collapse=\"true\" title=\"Session Info\"}\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.4.2 (2024-10-31)\n os       macOS Sequoia 15.6.1\n system   aarch64, darwin20\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Europe/London\n date     2025-10-13\n pandoc   3.4 @ /Applications/RStudio.app/Contents/Resources/app/quarto/bin/tools/aarch64/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n ! package * version date (UTC) lib source\n   knitr     1.50    2025-03-16 [1] RSPM (R 4.4.0)\n P procs   * 1.0.6   2024-03-06 [?] CRAN (R 4.4.0)\n P tibble    3.2.1   2023-03-20 [?] CRAN (R 4.4.0)\n\n [1] /Users/christinafillmore/Documents/GitHub/CAMIS/renv/library/macos/R-4.4/aarch64-apple-darwin20\n [2] /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library\n\n P ── Loaded and on-disk path mismatch.\n\n──────────────────────────────────────────────────────────────────────────────\n```\n\n\n:::\n:::\n\n\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}