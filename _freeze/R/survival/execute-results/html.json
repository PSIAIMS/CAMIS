{
  "hash": "4d04173f6298208d6cc8540bddc103b8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Survival Analysis Using R\"\n---\n\n\n\nThe most commonly used survival analysis methods in clinical trials include:\n\n-   Kaplan-Meier (KM) estimators: non-parametric statistics utilized for estimating the survival function\n\n-   Log-rank test: a non-parametric test for comparing the survival functions across two or more groups\n\n-   Cox proportional hazards (PH) model: a semi-parametric model often used to assess the relationship between the survival time and explanatory variables\n\nAdditionally, other methods for analyzing time-to-event data are available, such as:\n\n-   Parametric survival model\n\n-   Accelerated failure time model\n\n-   Competing risk model\n\n-   Restricted mean survival time\n\n-   Time-dependent Cox model\n\nWhile these models may be explored in a separate document, this particular document focuses solely on the three most prevalent methods: KM estimators, log-rank test and Cox PH model.\n\n# Analysis of Time-to-event Data\n\nBelow is a standard mock-up for survival analysis in clinical trials.\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](../images/survival/layout.png){fig-align='center' width=75%}\n:::\n:::\n\n\n\n## Example Data\n\nData source: https://stats.idre.ucla.edu/sas/seminars/sas-survival/\n\nThe data include 500 subjects from the Worcester Heart Attack Study. This study examined several factors, such as age, gender and BMI, that may influence survival time after heart attack. Follow up time for all participants begins at the time of hospital admission after heart attack and ends with death or loss to follow up (censoring). The variables used here are:\n\n-   lenfol: length of followup, terminated either by death or censoring - time variable\n\n-   fstat: loss to followup = 0, death = 1 - censoring variable\n\n-   afb: atrial fibrillation, no = 0, 1 = yes - explanatory variable\n\n-   gender: males = 0, females = 1 - stratification factor\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(haven)\nlibrary(survival)\nlibrary(survminer)\nlibrary(broom)\nlibrary(knitr)\nknitr::opts_chunk$set(echo = TRUE)\n\ndat <- read_sas(file.path(\"../data/whas500.sas7bdat\")) %>%\n  mutate(LENFOLY = round(LENFOL/365.25, 2), ## change follow-up days to years for better visualization\n         AFB = factor(AFB, levels = c(1, 0))) ## change AFB order to use \"Yes\" as the reference group to be consistent with SAS\n```\n:::\n\n\n\n## The Non-stratified Model\n\nFirst we try a non-stratified analysis following the mock-up above to describe the association between survival time and afb (atrial fibrillation).\n\nThe KM estimators are from `survival::survfit` function, the log-rank test uses `survminer::surv_pvalue`, and Cox PH model is conducted using `survival::coxph` function. Numerous R packages and functions are available for performing survival analysis. The author has selected `survival` and `survminer` for use in this context, but alternative options can also be employed for survival analysis.\n\n### KM estimators\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit.km <- survfit(Surv(LENFOLY, FSTAT) ~ AFB, data = dat)\n\n## quantile estimates\nquantile(fit.km, probs = c(0.25, 0.5, 0.75)) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$quantile\n        25   50   75\nAFB=1 0.26 2.37 6.43\nAFB=0 0.94 5.91 6.44\n\n$lower\n        25   50   75\nAFB=1 0.05 1.27 4.24\nAFB=0 0.55 4.32 6.44\n\n$upper\n        25   50 75\nAFB=1 1.11 4.24 NA\nAFB=0 1.47   NA NA\n```\n\n\n:::\n\n```{.r .cell-code}\n## landmark estimates at 1, 3, 5-year\nsummary(fit.km, times = c(1, 3, 5)) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCall: survfit(formula = Surv(LENFOLY, FSTAT) ~ AFB, data = dat)\n\n                AFB=1 \n time n.risk n.event survival std.err lower 95% CI upper 95% CI\n    1     50      28    0.641  0.0543        0.543        0.757\n    3     27      12    0.455  0.0599        0.351        0.589\n    5     11       6    0.315  0.0643        0.211        0.470\n\n                AFB=0 \n time n.risk n.event survival std.err lower 95% CI upper 95% CI\n    1    312     110    0.739  0.0214        0.699        0.782\n    3    199      33    0.642  0.0245        0.595        0.691\n    5     77      20    0.530  0.0311        0.472        0.595\n```\n\n\n:::\n:::\n\n\n\n### Log-rank test\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvminer::surv_pvalue(fit.km, data = dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  variable         pval   method    pval.txt\n1      AFB 0.0009646027 Log-rank p = 0.00096\n```\n\n\n:::\n:::\n\n\n\n### Cox PH model\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit.cox <- coxph(Surv(LENFOLY, FSTAT) ~ AFB, data = dat)\nfit.cox %>% \n  tidy(exponentiate = TRUE, conf.int = TRUE, conf.level = 0.95) %>%\n  select(term, estimate, conf.low, conf.high)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 4\n  term  estimate conf.low conf.high\n  <chr>    <dbl>    <dbl>     <dbl>\n1 AFB0     0.583    0.421     0.806\n```\n\n\n:::\n:::\n\n\n\n## The Stratified Model\n\nIn a stratified model, the Kaplan-Meier estimators remain the same as those in the non-stratified model. To implement stratified log-rank tests and Cox proportional hazards models, simply include the strata() function within the model formula.\n\n### Stratified Log-rank test\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit.km.str <- survfit(Surv(LENFOLY, FSTAT) ~ AFB + strata(GENDER), data = dat)\n\nsurvminer::surv_pvalue(fit.km.str, data = dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            variable        pval   method   pval.txt\n1 AFB+strata(GENDER) 0.001506607 Log-rank p = 0.0015\n```\n\n\n:::\n:::\n\n\n\n### Stratified Cox PH model\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit.cox.str <- coxph(Surv(LENFOLY, FSTAT) ~ AFB + strata(GENDER), data = dat)\nfit.cox.str %>% \n  tidy(exponentiate = TRUE, conf.int = TRUE, conf.level = 0.95) %>%\n  select(term, estimate, conf.low, conf.high)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 4\n  term  estimate conf.low conf.high\n  <chr>    <dbl>    <dbl>     <dbl>\n1 AFB0     0.594    0.430     0.823\n```\n\n\n:::\n:::\n",
    "supporting": [
      "survival_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}