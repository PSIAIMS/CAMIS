{
  "hash": "48b58d2031d3ac6b2d1a6f5f06020ef3",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Survival Analysis Using R\"\n---\n\n\n\nThe most commonly used survival analysis methods in clinical trials include:\n\n-   Kaplan-Meier (KM) estimators: non-parametric statistics utilized for estimating the survival function\n\n-   Log-rank test: a non-parametric test for comparing the survival functions across two or more groups\n\n-   Cox proportional hazards (PH) model: a semi-parametric model often used to assess the relationship between the survival time and explanatory variables\n\nAdditionally, other methods for analyzing time-to-event data are available, such as:\n\n-   Parametric survival model\n\n-   Accelerated failure time model\n\n-   Competing risk model\n\n-   Restricted mean survival time\n\n-   Time-dependent Cox model\n\nWhile these models may be explored in a separate document, this particular document focuses solely on the three most prevalent methods: KM estimators, log-rank test and Cox PH model.\n\n# Analysis of Time-to-event Data\n\nBelow is a standard mock-up for survival analysis in clinical trials.\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](../images/survival/layout.png){fig-align='center' width=75%}\n:::\n:::\n\n\n\n## Example Data\n\nData source: https://stats.idre.ucla.edu/sas/seminars/sas-survival/\n\nThe data include 500 subjects from the Worcester Heart Attack Study. This study examined several factors, such as age, gender and BMI, that may influence survival time after heart attack. Follow up time for all participants begins at the time of hospital admission after heart attack and ends with death or loss to follow up (censoring). The variables used here are:\n\n-   lenfol: length of followup, terminated either by death or censoring - time variable\n\n-   fstat: loss to followup = 0, death = 1 - censoring variable\n\n-   afb: atrial fibrillation, no = 0, 1 = yes - explanatory variable\n\n-   gender: males = 0, females = 1 - stratification factor\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(haven)\nlibrary(survival)\nlibrary(survminer)\nlibrary(ggsurvfit)\nlibrary(broom)\nlibrary(knitr)\nknitr::opts_chunk$set(echo = TRUE)\n\ndat <- haven::read_sas(file.path(\"../data/whas500.sas7bdat\")) |>\n  mutate(\n    LENFOLY = round(LENFOL / 365.25, 2), ## change follow-up days to years for better visualization\n    AFB = factor(AFB, levels = c(1, 0))\n  ) ## change AFB order to use \"Yes\" as the reference group to be consistent with SAS\n```\n:::\n\n\n\n## The Non-stratified Model\n\nFirst we try a non-stratified analysis following the mock-up above to describe the association between survival time and afb (atrial fibrillation).\n\nThe KM estimators are from `survival::survfit` function, the log-rank test uses `survminer::surv_pvalue`, and Cox PH model is conducted using `survival::coxph` function. Numerous R packages and functions are available for performing survival analysis. The author has selected `survival` and `survminer` for use in this context, but alternative options can also be employed for survival analysis.\n\n### KM estimators\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit.km <- survival::survfit(survival::Surv(LENFOLY, FSTAT) ~ AFB, data = dat)\n\n## quantile estimates\nquantile(fit.km, probs = c(0.25, 0.5, 0.75))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$quantile\n        25   50   75\nAFB=1 0.26 2.37 6.43\nAFB=0 0.94 5.91 6.44\n\n$lower\n        25   50   75\nAFB=1 0.05 1.27 4.24\nAFB=0 0.55 4.32 6.44\n\n$upper\n        25   50 75\nAFB=1 1.11 4.24 NA\nAFB=0 1.47   NA NA\n```\n\n\n:::\n\n```{.r .cell-code}\n## landmark estimates at 1, 3, 5-year\nsummary(fit.km, times = c(1, 3, 5))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCall: survfit(formula = survival::Surv(LENFOLY, FSTAT) ~ AFB, data = dat)\n\n                AFB=1 \n time n.risk n.event survival std.err lower 95% CI upper 95% CI\n    1     50      28    0.641  0.0543        0.543        0.757\n    3     27      12    0.455  0.0599        0.351        0.589\n    5     11       6    0.315  0.0643        0.211        0.470\n\n                AFB=0 \n time n.risk n.event survival std.err lower 95% CI upper 95% CI\n    1    312     110    0.739  0.0214        0.699        0.782\n    3    199      33    0.642  0.0245        0.595        0.691\n    5     77      20    0.530  0.0311        0.472        0.595\n```\n\n\n:::\n:::\n\n\n\n### Log-rank test\n\nThere are multiple ways to output the log-rank test. The survdiff() function from {survival} package performs a log-rank test (or its weighted variants) to compare survival curves between two or more treatment groups. rho=0 is the default and gives the standard log-rank test. rho=1 would output the Peto-Peto test (which weights earliest events more heavily).\n\nYou can also use {survminer} package as shown below or {ggsurvfit} package using add_pvalue option if you want the p-value to be put into a KM plot - See example in Kaplan Meier section below.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#survdiff() from survival package: unrounded pvalue=0.0009646027\nsurvdiff(Surv(LENFOLY, FSTAT) ~ AFB, data = dat, rho=0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCall:\nsurvdiff(formula = Surv(LENFOLY, FSTAT) ~ AFB, data = dat, rho = 0)\n\n        N Observed Expected (O-E)^2/E (O-E)^2/V\nAFB=1  78       47     30.3      9.26      10.9\nAFB=0 422      168    184.7      1.52      10.9\n\n Chisq= 10.9  on 1 degrees of freedom, p= 0.001 \n```\n\n\n:::\n\n```{.r .cell-code}\n#surv_pvalue() from survminer\nsurvminer::surv_pvalue(fit.km, data = dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  variable         pval   method    pval.txt\n1      AFB 0.0009646027 Log-rank p = 0.00096\n```\n\n\n:::\n:::\n\n\n\n### Cox PH model\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit.cox <- survival::coxph(survival::Surv(LENFOLY, FSTAT) ~ AFB, data = dat)\nfit.cox |>\n  tidy(exponentiate = TRUE, conf.int = TRUE, conf.level = 0.95) |>\n  select(term, estimate, conf.low, conf.high)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 4\n  term  estimate conf.low conf.high\n  <chr>    <dbl>    <dbl>     <dbl>\n1 AFB0     0.583    0.421     0.806\n```\n\n\n:::\n:::\n\n\n\n## The Stratified Model\n\nIn a stratified model, the Kaplan-Meier estimators remain the same as those in the non-stratified model. To implement stratified log-rank tests and Cox proportional hazards models, simply include the strata() function within the model formula.\n\n### Stratified Log-rank test\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit.km.str <- survival::survfit(\n  survival::Surv(LENFOLY, FSTAT) ~ AFB + survival::strata(GENDER),\n  data = dat\n)\n\nsurvminer::surv_pvalue(fit.km.str, data = dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                      variable         pval   method    pval.txt\n1 AFB+survival::strata(GENDER) 0.0004479027 Log-rank p = 0.00045\n```\n\n\n:::\n:::\n\n\n\n### Stratified Cox PH model\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit.cox.str <- survival::coxph(\n  survival::Surv(LENFOLY, FSTAT) ~ AFB + survival::strata(GENDER),\n  data = dat\n)\nfit.cox.str |>\n  tidy(exponentiate = TRUE, conf.int = TRUE, conf.level = 0.95) |>\n  select(term, estimate, conf.low, conf.high)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 4\n  term                             estimate conf.low conf.high\n  <chr>                               <dbl>    <dbl>     <dbl>\n1 AFB0                                0.596    0.431     0.825\n2 survival::strata(GENDER)GENDER=1    1.44     1.10      1.88 \n```\n\n\n:::\n:::\n\n\n\n### Kaplan-Meier Graphs\n\nYou can use {survminer} or {ggsurvfit} packages to create kaplan-meier graphs including presentation of the number at risk and number of events under the graph. Both methods are highly customizable.\n\nIt is good practice to ensure your categorical factors are specified as such and are clearly labelled. {forcats} package is useful for recoding factors as shown below using fct_recode().\n\n{ggsurvfit} is shown here because the code coverage is higher for this package than for {survminer}.\n\nThe code below, fits the model, adds a log-rank test p-value, limits the X axis, controls the major scale and minor scale of Y and X axis, adds a risk table under the graph showing number at risk and the cumulative events, color codes the lines to allow easy identification of AFB and Gender and adds appropriate titles and axis labels.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat2<- dat %>%\n  mutate(Treatment=fct_recode(AFB, 'Without AFB'='0','With AFB'='1')) %>% \n  mutate(GENDER_F = factor(GENDER, labels=c('Female','Male')))\n\nsurvfit2(Surv(LENFOLY, FSTAT) ~ Treatment + strata(GENDER_F), data = dat2) %>% \n      ggsurvfit() + \n      add_pvalue(rho=0) +\n      coord_cartesian(xlim = c(0, 6)) +\n       scale_y_continuous(breaks = seq(0, 1, by = 0.1), minor_breaks=NULL) +\n       scale_x_continuous(breaks = seq(0, 6, by = 1), minor_breaks=NULL) +\n       add_risktable(risktable_stats='{n.risk}({cum.event})') +\n       scale_color_manual(values=c('Blue','lightskyblue','red','hotpink')) +\n       labs(y='Percentage Survival',\n            x='Time (days)',\n            title='Time to death for patients with or without AFB')\n```\n\n::: {.cell-output-display}\n![](survival_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n# Reference\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.4.2 (2024-10-31)\n os       macOS Sequoia 15.6.1\n system   aarch64, darwin20\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Europe/London\n date     2025-10-13\n pandoc   3.4 @ /Applications/RStudio.app/Contents/Resources/app/quarto/bin/tools/aarch64/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n ! package        * version    date (UTC) lib source\n P abind            1.4-8      2024-09-12 [?] CRAN (R 4.4.1)\n   askpass          1.2.1      2024-10-04 [1] CRAN (R 4.4.1)\n P backports        1.5.0      2024-05-23 [?] CRAN (R 4.4.0)\n   base64enc        0.1-3      2015-07-28 [1] CRAN (R 4.4.0)\n   bit              4.5.0      2024-09-20 [1] CRAN (R 4.4.1)\n   bit64            4.5.2      2024-09-22 [1] CRAN (R 4.4.1)\n   blob             1.2.4      2023-03-17 [1] CRAN (R 4.4.0)\n   boot             1.3-31     2024-08-28 [2] CRAN (R 4.4.2)\n P broom          * 1.0.7      2024-09-26 [?] CRAN (R 4.4.1)\n   bslib            0.8.0      2024-07-29 [1] CRAN (R 4.4.0)\n   cachem           1.1.0      2024-05-16 [1] CRAN (R 4.4.0)\n   callr            3.7.6      2024-03-25 [1] CRAN (R 4.4.0)\n   car              3.1-3      2024-09-27 [1] RSPM (R 4.4.0)\n P carData          3.0-5      2022-01-06 [?] CRAN (R 4.4.0)\n   cellranger       1.1.0      2016-07-27 [1] CRAN (R 4.4.0)\n P cli              3.6.3      2024-06-21 [?] CRAN (R 4.4.0)\n   clipr            0.8.0      2022-02-22 [1] CRAN (R 4.4.0)\n P colorspace       2.1-1      2024-07-26 [?] CRAN (R 4.4.0)\n   commonmark       1.9.2      2024-10-04 [1] CRAN (R 4.4.1)\n   conflicted       1.2.0      2023-02-01 [1] CRAN (R 4.4.0)\n   corrplot         0.94       2024-08-17 [1] CRAN (R 4.4.0)\n   cowplot          1.1.3      2024-01-22 [1] CRAN (R 4.4.0)\n   cpp11            0.5.0      2024-08-27 [1] CRAN (R 4.4.1)\n   crayon           1.5.3      2024-06-20 [1] CRAN (R 4.4.0)\n   curl             5.2.3      2024-09-20 [1] CRAN (R 4.4.1)\n P data.table       1.16.0     2024-08-27 [?] CRAN (R 4.4.1)\n   DBI              1.2.3      2024-06-02 [1] CRAN (R 4.4.0)\n   dbplyr           2.5.0      2024-03-19 [1] CRAN (R 4.4.0)\n   Deriv            4.1.6      2024-09-13 [1] CRAN (R 4.4.1)\n P digest           0.6.37     2024-08-19 [?] CRAN (R 4.4.1)\n   doBy             4.6.24     2024-10-07 [1] CRAN (R 4.4.1)\n P dplyr          * 1.1.4      2023-11-17 [?] CRAN (R 4.4.0)\n   dtplyr           1.3.1      2023-03-22 [1] CRAN (R 4.4.0)\n P evaluate         1.0.0      2024-09-17 [?] CRAN (R 4.4.1)\n   exactRankTests   0.8-35     2022-04-26 [1] CRAN (R 4.4.0)\n P fansi            1.0.6      2023-12-08 [?] CRAN (R 4.4.0)\n P farver           2.1.2      2024-05-13 [?] CRAN (R 4.4.0)\n P fastmap          1.2.0      2024-05-15 [?] CRAN (R 4.4.0)\n   fontawesome      0.5.2      2023-08-19 [1] CRAN (R 4.4.0)\n P forcats        * 1.0.0      2023-01-29 [?] CRAN (R 4.4.0)\n P Formula          1.2-5      2023-02-24 [?] CRAN (R 4.4.0)\n   fs               1.6.4      2024-04-25 [1] CRAN (R 4.4.0)\n   gargle           1.5.2      2023-07-20 [1] CRAN (R 4.4.0)\n P generics         0.1.3      2022-07-05 [?] CRAN (R 4.4.0)\n P ggplot2        * 3.5.1      2024-04-23 [?] CRAN (R 4.4.0)\n P ggpubr         * 0.6.0      2023-02-10 [?] CRAN (R 4.4.0)\n   ggrepel          0.9.6      2024-09-07 [1] CRAN (R 4.4.1)\n   ggsci            3.2.0      2024-06-18 [1] CRAN (R 4.4.0)\n P ggsignif         0.6.4      2022-10-13 [?] CRAN (R 4.4.0)\n P ggsurvfit      * 1.1.0      2024-05-08 [?] CRAN (R 4.4.0)\n   ggtext           0.1.2      2022-09-16 [1] CRAN (R 4.4.0)\n P glue             1.8.0      2024-09-30 [?] CRAN (R 4.4.1)\n   googledrive      2.1.1      2023-06-11 [1] CRAN (R 4.4.0)\n   googlesheets4    1.1.1      2023-06-11 [1] CRAN (R 4.4.0)\n P gridExtra        2.3        2017-09-09 [?] CRAN (R 4.4.0)\n   gridtext         0.1.5      2022-09-16 [1] CRAN (R 4.4.0)\n P gtable           0.3.5      2024-04-22 [?] CRAN (R 4.4.0)\n P haven          * 2.5.4      2023-11-30 [?] CRAN (R 4.4.0)\n   highr            0.11       2024-05-26 [1] CRAN (R 4.4.0)\n P hms              1.1.3      2023-03-21 [?] CRAN (R 4.4.0)\n P htmltools        0.5.8.1    2024-04-04 [?] CRAN (R 4.4.0)\n   httr             1.4.7      2023-08-15 [1] CRAN (R 4.4.0)\n   ids              1.0.1      2017-05-31 [1] CRAN (R 4.4.0)\n   isoband          0.2.7      2022-12-20 [1] CRAN (R 4.4.0)\n   jpeg             0.1-10     2022-11-29 [1] CRAN (R 4.4.0)\n   jquerylib        0.1.4      2021-04-26 [1] CRAN (R 4.4.0)\n P jsonlite         1.8.9      2024-09-20 [?] CRAN (R 4.4.1)\n P km.ci            0.5-6      2022-04-06 [?] CRAN (R 4.4.0)\n P KMsurv           0.1-5      2012-12-03 [?] CRAN (R 4.4.0)\n   knitr          * 1.50       2025-03-16 [1] RSPM (R 4.4.0)\n P labeling         0.4.3      2023-08-29 [?] CRAN (R 4.4.0)\n   lattice          0.22-6     2024-03-20 [2] CRAN (R 4.4.2)\n P lifecycle        1.0.4      2023-11-07 [?] CRAN (R 4.4.0)\n   lme4             1.1-35.5   2024-07-03 [1] CRAN (R 4.4.0)\n P lubridate      * 1.9.3      2023-09-27 [?] CRAN (R 4.4.0)\n P magrittr         2.0.3      2022-03-30 [?] CRAN (R 4.4.0)\n   markdown         1.13       2024-06-04 [1] CRAN (R 4.4.0)\n   MASS             7.3-61     2024-06-13 [2] CRAN (R 4.4.2)\n   Matrix           1.7-1      2024-10-18 [2] CRAN (R 4.4.2)\n   MatrixModels     0.5-3      2023-11-06 [1] CRAN (R 4.4.0)\n   maxstat          0.7-25     2017-03-02 [1] CRAN (R 4.4.0)\n   memoise          2.0.1      2021-11-26 [1] CRAN (R 4.4.0)\n   mgcv             1.9-1      2023-12-21 [2] CRAN (R 4.4.2)\n   microbenchmark   1.5.0      2024-09-04 [1] CRAN (R 4.4.1)\n   mime             0.12       2021-09-28 [1] CRAN (R 4.4.0)\n   minqa            1.2.8      2024-08-17 [1] CRAN (R 4.4.0)\n   modelr           0.1.11     2023-03-22 [1] CRAN (R 4.4.0)\n P munsell          0.5.1      2024-04-01 [?] CRAN (R 4.4.0)\n   mvtnorm          1.3-1      2024-09-03 [1] CRAN (R 4.4.1)\n   nlme             3.1-166    2024-08-14 [2] CRAN (R 4.4.2)\n   nloptr           2.1.1      2024-06-25 [1] CRAN (R 4.4.0)\n   nnet             7.3-19     2023-05-03 [2] CRAN (R 4.4.2)\n   numDeriv         2016.8-1.1 2019-06-06 [1] CRAN (R 4.4.0)\n   openssl          2.2.2      2024-09-20 [1] CRAN (R 4.4.1)\n P patchwork        1.3.0      2024-09-16 [?] CRAN (R 4.4.1)\n   pbkrtest         0.5.3      2024-06-26 [1] CRAN (R 4.4.0)\n P pillar           1.9.0      2023-03-22 [?] CRAN (R 4.4.0)\n P pkgconfig        2.0.3      2019-09-22 [?] CRAN (R 4.4.0)\n   png              0.1-8      2022-11-29 [1] CRAN (R 4.4.0)\n   polynom          1.4-1      2022-04-11 [1] CRAN (R 4.4.0)\n   prettyunits      1.2.0      2023-09-24 [1] CRAN (R 4.4.0)\n   processx         3.8.4      2024-03-16 [1] CRAN (R 4.4.0)\n   progress         1.2.3      2023-12-06 [1] CRAN (R 4.4.0)\n   ps               1.8.0      2024-09-12 [1] CRAN (R 4.4.1)\n   purrr          * 1.1.0      2025-07-10 [1] RSPM (R 4.4.0)\n   quantreg         5.98       2024-05-26 [1] CRAN (R 4.4.0)\n P R6               2.5.1      2021-08-19 [?] CRAN (R 4.4.0)\n   ragg             1.3.3      2024-09-11 [1] CRAN (R 4.4.1)\n   rappdirs         0.3.3      2021-01-31 [1] CRAN (R 4.4.0)\n   RColorBrewer     1.1-3      2022-04-03 [1] CRAN (R 4.4.0)\n   Rcpp             1.0.13     2024-07-17 [1] CRAN (R 4.4.0)\n   RcppEigen        0.3.4.0.2  2024-08-24 [1] CRAN (R 4.4.1)\n P readr          * 2.1.5      2024-01-10 [?] CRAN (R 4.4.0)\n   readxl           1.4.3      2023-07-06 [1] CRAN (R 4.4.0)\n   rematch          2.0.0      2023-08-30 [1] CRAN (R 4.4.0)\n   rematch2         2.1.2      2020-05-01 [1] CRAN (R 4.4.0)\n   reprex           2.1.1      2024-07-06 [1] CRAN (R 4.4.0)\n P rlang            1.1.6      2025-04-11 [?] RSPM\n P rmarkdown        2.28       2024-08-17 [?] CRAN (R 4.4.0)\n P rstatix          0.7.2      2023-02-01 [?] CRAN (R 4.4.0)\n P rstudioapi       0.16.0     2024-03-24 [?] CRAN (R 4.4.0)\n   rvest            1.0.4      2024-02-12 [1] CRAN (R 4.4.0)\n   sass             0.4.9      2024-03-15 [1] CRAN (R 4.4.0)\n P scales           1.3.0      2023-11-28 [?] CRAN (R 4.4.0)\n   selectr          0.4-2      2019-11-20 [1] CRAN (R 4.4.0)\n   SparseM          1.84-2     2024-07-17 [1] CRAN (R 4.4.0)\n P stringi          1.8.4      2024-05-06 [?] CRAN (R 4.4.0)\n P stringr        * 1.5.1      2023-11-14 [?] CRAN (R 4.4.0)\n P survival       * 3.7-0      2024-06-05 [?] CRAN (R 4.4.0)\n P survminer      * 0.4.9      2021-03-09 [?] CRAN (R 4.4.0)\n P survMisc         0.5.6      2022-04-07 [?] CRAN (R 4.4.0)\n   sys              3.4.3      2024-10-04 [1] CRAN (R 4.4.1)\n   systemfonts      1.1.0      2024-05-15 [1] CRAN (R 4.4.0)\n   textshaping      0.4.0      2024-05-24 [1] CRAN (R 4.4.0)\n P tibble         * 3.2.1      2023-03-20 [?] CRAN (R 4.4.0)\n P tidyr          * 1.3.1      2024-01-24 [?] CRAN (R 4.4.0)\n P tidyselect       1.2.1      2024-03-11 [?] CRAN (R 4.4.0)\n P tidyverse      * 2.0.0      2023-02-22 [?] CRAN (R 4.4.0)\n P timechange       0.3.0      2024-01-18 [?] CRAN (R 4.4.0)\n   tinytex          0.53       2024-09-15 [1] CRAN (R 4.4.1)\n P tzdb             0.4.0      2023-05-12 [?] CRAN (R 4.4.0)\n P utf8             1.2.4      2023-10-22 [?] CRAN (R 4.4.0)\n   uuid             1.2-1      2024-07-29 [1] CRAN (R 4.4.0)\n P vctrs            0.6.5      2023-12-01 [?] CRAN (R 4.4.0)\n   viridisLite      0.4.2      2023-05-02 [1] CRAN (R 4.4.0)\n   vroom            1.6.5      2023-12-05 [1] CRAN (R 4.4.0)\n P withr            3.0.1      2024-07-31 [?] CRAN (R 4.4.0)\n   xfun             0.52       2025-04-02 [1] RSPM (R 4.4.0)\n   xml2             1.3.6      2023-12-04 [1] CRAN (R 4.4.0)\n P xtable           1.8-4      2019-04-21 [?] CRAN (R 4.4.0)\n P yaml             2.3.10     2024-07-26 [?] CRAN (R 4.4.0)\n P zoo              1.8-12     2023-04-13 [?] CRAN (R 4.4.0)\n\n [1] /Users/christinafillmore/Documents/GitHub/CAMIS/renv/library/macos/R-4.4/aarch64-apple-darwin20\n [2] /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library\n\n P ── Loaded and on-disk path mismatch.\n\n──────────────────────────────────────────────────────────────────────────────\n```\n\n\n:::\n:::\n",
    "supporting": [
      "survival_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}