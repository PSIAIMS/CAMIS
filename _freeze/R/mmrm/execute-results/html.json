{
  "hash": "db2397a4387bed53dfeb1f7143358898",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"MMRM in R\"\n---\n\n\n\n## Fitting the MMRM in R\n\nMixed models for repeated measures (MMRM) are a popular choice for analyzing longitudinal continuous outcomes in randomized clinical trials and beyond; see [Cnaan, Laird and Slasor (1997)](https://doi.org/10.1002/(SICI)1097-0258(19971030)16:20<2349::AID-SIM667>3.0.CO;2-E) for a tutorial and [Mallinckrodt, Lane and Schnell (2008)](https://doi.org/10.1177/009286150804200402) for a review. \n\nThis vignette shows examples from the `mmrm` package.\n\nThe `mmrm` package implements MMRM based on the marginal linear model without  random effects using Template Model Builder (`TMB`) which enables fast and  robust model fitting. Users can specify a variety of covariance matrices, weight observations, fit models with restricted or standard maximum likelihood inference, perform hypothesis testing with Satterthwaite or Kenward-Roger adjustment, and extract least\nsquare means estimates by using `emmeans`.\n\n### Main Features\n\n* Flexible covariance specification:\n  * [Structures](https://openpharma.github.io/mmrm/main/articles/covariance.html): unstructured, Toeplitz, AR1, compound symmetry, ante-dependence, and spatial exponential.\n  * Groups: shared covariance structure for all subjects or group-specific\ncovariance estimates.\n  * Variances: homogeneous or heterogeneous across time points.\n* Inference:\n  * Supports REML and ML.\n  * Supports weights.\n* Hypothesis testing:\n  * [Least square means](https://openpharma.github.io/mmrm/main/reference/emmeans_support.html):\n    can be obtained with the `emmeans` package\n  * One- and multi-dimensional linear contrasts of model parameters can be tested.\n  * [Satterthwaite](https://openpharma.github.io/mmrm/main/articles/satterthwaite.html)\n    adjusted degrees of freedom.\n  * [Kenward-Roger](https://openpharma.github.io/mmrm/main/articles/kenward.html)\n    adjusted degrees of freedom and coefficients covariance matrix.\n  * [Coefficient Covariance](https://openpharma.github.io/mmrm/main/articles/coef_vcov.html)\n* `C++` backend:\n  * Fast implementation using `C++` and automatic differentiation to\n    obtain precise gradient information for model fitting.\n  * Model fitting algorithm [details](https://openpharma.github.io/mmrm/main/articles/algorithm.html) used in `mmrm`.\n* Package ecosystems integration:\n  * Integration with [tidymodels](https://www.tidymodels.org/) package ecosystem\n    * Dedicated [parsnip](https://parsnip.tidymodels.org/) engine for linear regression\n    * Integration with [recipes](https://recipes.tidymodels.org/)\n  * Integration with [tern](https://insightsengineering.github.io/tern/) package ecosystems\n    * The [tern.mmrm](https://insightsengineering.github.io/tern.mmrm/) package can be used to run the `mmrm` fit and generate tabulation and plots of least square means per visit and treatment arm, tabulation of model diagnostics, diagnostic graphs, and other standard model outputs.\n\n### Using the `mmrm::mmrm` function\n\nSee also the [introductory vignette](https://openpharma.github.io/mmrm/main/articles/introduction.html)\n\nThe code below implements an MMRM fit in R with the `mmrm::mmrm` function.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(mmrm)\nfit <- mmrm::mmrm(\n  formula = FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID),\n  data = fev_data\n)\n```\n:::\n\n\n\nThe code specifies an MMRM with the given covariates and an unstructured covariance matrix for the timepoints (also called visits in the clinical trial context, here given by `AVISIT`) within the subjects (here `USUBJID`). While by default this uses restricted maximum likelihood (REML), it is also possible to use ML, see `?mmrm`.\n\nPrinting the object will show you output which should be familiar to anyone who has used any popular modeling functions such as `stats::lm()`, `stats::glm()`, `glmmTMB::glmmTMB()`, and `lme4::nlmer()`. From this print out we see the function call, the data used, the covariance structure with number of variance parameters, as well as the likelihood method, and model deviance achieved. Additionally the user is provided a printout of the estimated coefficients and the model convergence information:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nmmrm fit\n\nFormula:     FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID)\nData:        fev_data (used 537 observations from 197 subjects with maximum 4 \ntimepoints)\nCovariance:  unstructured (10 variance parameters)\nInference:   REML\nDeviance:    3386.45\n\nCoefficients: \n                  (Intercept) RACEBlack or African American \n                  30.77747548                    1.53049977 \n                    RACEWhite                     SEXFemale \n                   5.64356535                    0.32606192 \n                     ARMCDTRT                    AVISITVIS2 \n                   3.77423004                    4.83958845 \n                   AVISITVIS3                    AVISITVIS4 \n                  10.34211288                   15.05389826 \n          ARMCDTRT:AVISITVIS2           ARMCDTRT:AVISITVIS3 \n                  -0.04192625                   -0.69368537 \n          ARMCDTRT:AVISITVIS4 \n                   0.62422703 \n\nModel Inference Optimization:\nConverged with code 0 and message: convergence: rel_reduction_of_f <= factr*epsmch\n```\n\n\n:::\n:::\n\n\n\nThe `summary()` method then provides the coefficients table with Satterthwaite degrees of freedom as well as the covariance matrix estimate:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit |>\n  summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nmmrm fit\n\nFormula:     FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID)\nData:        fev_data (used 537 observations from 197 subjects with maximum 4 \ntimepoints)\nCovariance:  unstructured (10 variance parameters)\nMethod:      Satterthwaite\nVcov Method: Asymptotic\nInference:   REML\n\nModel selection criteria:\n     AIC      BIC   logLik deviance \n  3406.4   3439.3  -1693.2   3386.4 \n\nCoefficients: \n                               Estimate Std. Error        df t value Pr(>|t|)\n(Intercept)                    30.77748    0.88656 218.80000  34.715  < 2e-16\nRACEBlack or African American   1.53050    0.62448 168.67000   2.451 0.015272\nRACEWhite                       5.64357    0.66561 157.14000   8.479 1.56e-14\nSEXFemale                       0.32606    0.53195 166.13000   0.613 0.540744\nARMCDTRT                        3.77423    1.07415 145.55000   3.514 0.000589\nAVISITVIS2                      4.83959    0.80172 143.88000   6.037 1.27e-08\nAVISITVIS3                     10.34211    0.82269 155.56000  12.571  < 2e-16\nAVISITVIS4                     15.05390    1.31281 138.47000  11.467  < 2e-16\nARMCDTRT:AVISITVIS2            -0.04193    1.12932 138.56000  -0.037 0.970439\nARMCDTRT:AVISITVIS3            -0.69369    1.18765 158.17000  -0.584 0.559996\nARMCDTRT:AVISITVIS4             0.62423    1.85085 129.72000   0.337 0.736463\n                                 \n(Intercept)                   ***\nRACEBlack or African American *  \nRACEWhite                     ***\nSEXFemale                        \nARMCDTRT                      ***\nAVISITVIS2                    ***\nAVISITVIS3                    ***\nAVISITVIS4                    ***\nARMCDTRT:AVISITVIS2              \nARMCDTRT:AVISITVIS3              \nARMCDTRT:AVISITVIS4              \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCovariance estimate:\n        VIS1    VIS2    VIS3    VIS4\nVIS1 40.5537 14.3960  4.9747 13.3867\nVIS2 14.3960 26.5715  2.7855  7.4745\nVIS3  4.9747  2.7855 14.8979  0.9082\nVIS4 13.3867  7.4745  0.9082 95.5568\n```\n\n\n:::\n:::\n\n\n\n### Extracting effect estimates using `emmeans`\n\nIn order to extract relevant marginal means (LSmeans) and contrasts we can use the `emmeans` package. This package includes methods that allow `mmrm` objects to be used with the `emmeans` package. `emmeans` computes estimated marginal means (also called least-square means) for the coefficients of the MMRM.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(emmeans)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nmmrm() registered as emmeans extension\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWelcome to emmeans.\nCaution: You lose important information if you filter this package's results.\nSee '? untidy'\n```\n\n\n:::\n\n```{.r .cell-code}\nemmeans(fit, ~ ARMCD | AVISIT)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAVISIT = VIS1:\n ARMCD emmean    SE  df lower.CL upper.CL\n PBO     33.3 0.755 148     31.8     34.8\n TRT     37.1 0.763 143     35.6     38.6\n\nAVISIT = VIS2:\n ARMCD emmean    SE  df lower.CL upper.CL\n PBO     38.2 0.612 147     37.0     39.4\n TRT     41.9 0.602 143     40.7     43.1\n\nAVISIT = VIS3:\n ARMCD emmean    SE  df lower.CL upper.CL\n PBO     43.7 0.462 130     42.8     44.6\n TRT     46.8 0.509 130     45.7     47.8\n\nAVISIT = VIS4:\n ARMCD emmean    SE  df lower.CL upper.CL\n PBO     48.4 1.189 134     46.0     50.7\n TRT     52.8 1.188 133     50.4     55.1\n\nResults are averaged over the levels of: RACE, SEX \nConfidence level used: 0.95 \n```\n\n\n:::\n:::\n\n\n\nNote that the degrees of freedom choice is inherited here from the initial `mmrm`\nfit.\n",
    "supporting": [
      "mmrm_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}