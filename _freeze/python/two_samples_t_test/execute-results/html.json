{
  "hash": "196b1c1b8bd8420a5feff26b4e79fe01",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Two Sample t-test in Python\"\noutput: html_document\n---\n\n\nThe Two Sample t-test is used to compare two independent samples against each other. In the Two Sample t-test, the mean of the first sample is compared against the mean of the second sample. In Python, a Two Sample t-test can be performed using the **stats** package from scipy.\n\n### Data Used\n\nThe following data was used in this example.\n\n::: {#ae27ef0c .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nfrom scipy import stats\n\n# Create sample data\ndata = {\n    'trt_grp': ['placebo', 'placebo', 'placebo', 'placebo', 'placebo', 'placebo', 'placebo', 'placebo', 'placebo', 'placebo', 'placebo', 'placebo', 'placebo', 'placebo', 'placebo', 'placebo', 'treatment', 'treatment', 'treatment', 'treatment', 'treatment', 'treatment', 'treatment', 'treatment', 'treatment', 'treatment', 'treatment', 'treatment', 'treatment', 'treatment', 'treatment', 'treatment'],\n    'WtGain': [94, 12, 26, 89, 88, 96, 85, 130, 75, 54, 112, 69, 104, 95, 53, 21, 45, 62, 96, 128, 120, 99, 28, 50, 109, 115, 39, 96, 87, 100, 76, 80]\n}\n\ndf = pd.DataFrame(data)\n```\n:::\n\n\nIf we have normalized data, we can use the classic Student's t-test. For a Two sample test where the variances are not equal, we should use the Welch's t-test. Both of those options are available in the scipy **stats** package.\n\n### Student's T-Test\n\n#### Code\n\nThe following code was used to test the comparison in Python. Note that we must separate the single variable into two variables to satisfy the scipy **stats** package syntax.\n\n::: {#cfaef8ac .cell execution_count=2}\n``` {.python .cell-code}\n# Separate data into two groups\ngroup1 = df[df['trt_grp'] == 'placebo']['WtGain']\ngroup2 = df[df['trt_grp'] == 'treatment']['WtGain']\n\n# Perform Student's t-test assuming equal variances\nt_stat, p_value_equal_var = stats.ttest_ind(group1, group2, equal_var=True)\n\nprint(\"Student's T-Test assuming equal variances:\")\nprint(f\"T-statistic: {t_stat}\")\nprint(f\"P-value: {p_value_equal_var}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nStudent's T-Test assuming equal variances:\nT-statistic: -0.6969002027708538\nP-value: 0.4912306166204561\n```\n:::\n:::\n\n\n### Welch's T-Test\n\n#### Code\n\nThe following code was used to test the comparison in Python using Welch's t-test.\n\n::: {#2205235e .cell execution_count=3}\n``` {.python .cell-code}\n# Perform Welch's t-test assuming unequal variances\nt_stat_welch, p_value_unequal_var = stats.ttest_ind(group1, group2, equal_var=False)\n\nprint(\"\\nWelch's T-Test assuming unequal variances:\")\nprint(f\"T-statistic: {t_stat_welch}\")\nprint(f\"P-value: {p_value_unequal_var}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nWelch's T-Test assuming unequal variances:\nT-statistic: -0.6969002027708538\nP-value: 0.4912856152047901\n```\n:::\n:::\n\n\n",
    "supporting": [
      "two_samples_t_test_files\\figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}