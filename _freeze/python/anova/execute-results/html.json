{
  "hash": "8bcffc452f7c9678ce131ed30ec76e4e",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"ANOVA\"\n---\n\n\n## Introduction\n\nAnalysis of VAriance *(ANOVA)* is a statistical test to measure the difference between means of more than two groups.It is best suited when the data is normally distributed. By partitioning total variance into components, ANOVA unravels relationship between variables and identifies the true source of variation. It can handle multiple factors and their interactions, providing a robust way to better understand intricate relationships.\n\n## Anova Test in Python\n\nTo perform a one-way ANOVA test in Python we can use the **f_oneway()** function from SciPy library.\nSimilarly, to perform two-way ANOVA test **anova_lm()** function from the statsmodel library is frequently used.\n\nFor this test, weâ€™ll create a data frame called df_disease taken from the SAS documentation. The corresponding data can be found [here](https://github.com/PSIAIMS/CAMIS/blob/main/data/sas_disease.csv). In this experiment, we are trying to find the impact of   different drug and disease group on the `stem-length`  \n\n::: {#369d73d9 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport statsmodels.api as sm\nfrom statsmodels.formula.api import ols\n\n# Read the sample data\ndf = pd.read_csv(\"../data/sas_disease.csv\")\n\n\n#perform two-way ANOVA\nmodel = ols('y ~ C(drug) + C(disease) + C(drug):C(disease)', data=df).fit()\nsm.stats.anova_lm(model, typ=2)\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sum_sq</th>\n      <th>df</th>\n      <th>F</th>\n      <th>PR(&gt;F)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>C(drug)</th>\n      <td>3063.432863</td>\n      <td>3.0</td>\n      <td>9.245096</td>\n      <td>0.000067</td>\n    </tr>\n    <tr>\n      <th>C(disease)</th>\n      <td>418.833741</td>\n      <td>2.0</td>\n      <td>1.895990</td>\n      <td>0.161720</td>\n    </tr>\n    <tr>\n      <th>C(drug):C(disease)</th>\n      <td>707.266259</td>\n      <td>6.0</td>\n      <td>1.067225</td>\n      <td>0.395846</td>\n    </tr>\n    <tr>\n      <th>Residual</th>\n      <td>5080.816667</td>\n      <td>46.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Sum of Squares Tables\n\n### Type I\n\n::: {#8ee0b867 .cell execution_count=2}\n``` {.python .cell-code}\nmodel = ols('y ~ C(drug) + C(disease) + C(drug):C(disease)', data=df).fit()\nsm.stats.anova_lm(model)\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>df</th>\n      <th>sum_sq</th>\n      <th>mean_sq</th>\n      <th>F</th>\n      <th>PR(&gt;F)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>C(drug)</th>\n      <td>3.0</td>\n      <td>3133.238506</td>\n      <td>1044.412835</td>\n      <td>9.455761</td>\n      <td>0.000056</td>\n    </tr>\n    <tr>\n      <th>C(disease)</th>\n      <td>2.0</td>\n      <td>418.833741</td>\n      <td>209.416870</td>\n      <td>1.895990</td>\n      <td>0.161720</td>\n    </tr>\n    <tr>\n      <th>C(drug):C(disease)</th>\n      <td>6.0</td>\n      <td>707.266259</td>\n      <td>117.877710</td>\n      <td>1.067225</td>\n      <td>0.395846</td>\n    </tr>\n    <tr>\n      <th>Residual</th>\n      <td>46.0</td>\n      <td>5080.816667</td>\n      <td>110.452536</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n### Type II\n\n::: {#5fbd43d2 .cell execution_count=3}\n``` {.python .cell-code}\nmodel = ols('y ~ C(drug) + C(disease) + C(drug):C(disease)', data=df).fit()\nsm.stats.anova_lm(model, typ=2)\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sum_sq</th>\n      <th>df</th>\n      <th>F</th>\n      <th>PR(&gt;F)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>C(drug)</th>\n      <td>3063.432863</td>\n      <td>3.0</td>\n      <td>9.245096</td>\n      <td>0.000067</td>\n    </tr>\n    <tr>\n      <th>C(disease)</th>\n      <td>418.833741</td>\n      <td>2.0</td>\n      <td>1.895990</td>\n      <td>0.161720</td>\n    </tr>\n    <tr>\n      <th>C(drug):C(disease)</th>\n      <td>707.266259</td>\n      <td>6.0</td>\n      <td>1.067225</td>\n      <td>0.395846</td>\n    </tr>\n    <tr>\n      <th>Residual</th>\n      <td>5080.816667</td>\n      <td>46.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n### Type III\n\n::: {#5baec904 .cell execution_count=4}\n``` {.python .cell-code}\nmodel = ols('y ~ C(drug,Sum) + C(disease,Sum) + C(drug,Sum):C(disease,Sum)', data=df).fit()\nsm.stats.anova_lm(model, typ=3)\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sum_sq</th>\n      <th>df</th>\n      <th>F</th>\n      <th>PR(&gt;F)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Intercept</th>\n      <td>20037.613011</td>\n      <td>1.0</td>\n      <td>181.413788</td>\n      <td>1.417921e-17</td>\n    </tr>\n    <tr>\n      <th>C(drug, Sum)</th>\n      <td>2997.471860</td>\n      <td>3.0</td>\n      <td>9.046033</td>\n      <td>8.086388e-05</td>\n    </tr>\n    <tr>\n      <th>C(disease, Sum)</th>\n      <td>415.873046</td>\n      <td>2.0</td>\n      <td>1.882587</td>\n      <td>1.637355e-01</td>\n    </tr>\n    <tr>\n      <th>C(drug, Sum):C(disease, Sum)</th>\n      <td>707.266259</td>\n      <td>6.0</td>\n      <td>1.067225</td>\n      <td>3.958458e-01</td>\n    </tr>\n    <tr>\n      <th>Residual</th>\n      <td>5080.816667</td>\n      <td>46.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n### Type IV\n\nThere is no Type IV sum of squares calculation in Python similiar to SAS.\n\n",
    "supporting": [
      "anova_files\\figure-html"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}