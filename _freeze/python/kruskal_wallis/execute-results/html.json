{
  "hash": "d0bd6fcff98362c031f616cea69f9598",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Kruskal Wallis in Python\"\n---\n\n\n## Introduction\n\nThe Kruskal-Wallis test is a non-parametric equivalent to the one-way ANOVA. For this example, the data used is a subset of the iris dataset, testing for difference in sepal width between species of flower.\n\n::: {#360f8ea0 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\n\n# Define the data\ndata = {\n    'Species': ['setosa', 'setosa', 'setosa', 'setosa', 'setosa', 'setosa', 'versicolor', 'versicolor', 'versicolor', 'versicolor', 'versicolor', 'versicolor', 'virginica', 'virginica', 'virginica', 'virginica', 'virginica', 'virginica'],\n    'Sepal_Width': [3.4, 3.0, 3.4, 3.2, 3.5, 3.1, 2.7, 2.9, 2.7, 2.6, 2.5, 2.5, 3.0, 3.0, 3.1, 3.8, 2.7, 3.3]\n}\n\n# Create the DataFrame\niris_sub = pd.DataFrame(data)\n\n# Print the DataFrame\nprint(iris_sub)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       Species  Sepal_Width\n0       setosa          3.4\n1       setosa          3.0\n2       setosa          3.4\n3       setosa          3.2\n4       setosa          3.5\n5       setosa          3.1\n6   versicolor          2.7\n7   versicolor          2.9\n8   versicolor          2.7\n9   versicolor          2.6\n10  versicolor          2.5\n11  versicolor          2.5\n12   virginica          3.0\n13   virginica          3.0\n14   virginica          3.1\n15   virginica          3.8\n16   virginica          2.7\n17   virginica          3.3\n```\n:::\n:::\n\n\n## Implementing Kruskal-Wallis in Python\n\nThe Kruskal-Wallis test can be implemented in Python using the kruskal function from scipy.stats. The null hypothesis is that the samples are from identical populations.\n\n::: {#4639de63 .cell execution_count=2}\n``` {.python .cell-code}\nfrom scipy.stats import kruskal\n\n# Separate the data for each species\nsetosa_data = iris_sub[iris_sub['Species'] == 'setosa']['Sepal_Width']\nversicolor_data = iris_sub[iris_sub['Species'] == 'versicolor']['Sepal_Width']\nvirginica_data = iris_sub[iris_sub['Species'] == 'virginica']['Sepal_Width']\n\n# Perform the Kruskal-Wallis H-test\nh_statistic, p_value = kruskal(setosa_data, versicolor_data, virginica_data)\n\n# Calculate the degrees of freedom\nk = len(iris_sub['Species'].unique())\ndf = k - 1\n\nprint(\"H-statistic:\", h_statistic)\nprint(\"p-value:\", p_value)\nprint(\"Degrees of freedom:\", df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nH-statistic: 10.922233820459285\np-value: 0.0042488075570347485\nDegrees of freedom: 2\n```\n:::\n:::\n\n\n## Results\n\nAs seen above, Python outputs the Kruskal-Wallis rank sum statistic (10.922), the degrees of freedom (2), and the p-value of the test (0.004249). Therefore, the difference in population medians is statistically significant at the 5% level.\n\n",
    "supporting": [
      "kruskal_wallis_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}