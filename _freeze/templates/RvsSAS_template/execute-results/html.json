{
  "hash": "3c42a2aad62183c0a92e80404388f0b8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"R vs SAS [Name of Method]\"\n---\n\n\n\n# R vs SAS \\[Name of Method\\]\n\n## Introduction\n\nProvide a brief overview of the analysis, its purpose, and its applications.\n\n**Example:** This section compares the implementation of Poisson Regression in R and SAS. Poisson regression is used to model count data and contingency tables. It's particularly useful for modeling the number of events occurring within a fixed period of time or space.\n\n## General Comparison Table\n\nThe following table provides an overview of the support and results comparability between R and SAS for the new analysis point.\n\n+-----------------------------------+-----------------------------------+-------------------------------------+--------------------+----------------------------------------------------------+\n| Analysis                          | Supported in R                    | Supported in SAS                    | Results Match      | Notes                                                    |\n+===================================+===================================+=====================================+====================+==========================================================+\n| [Scenario 1: Basic Functionality] | Example: [Yes](../R/example_link) | Example: [Yes](../SAS/example_link) | Example 1: Yes     | Specific settings or packages required for exact match   |\n|                                   |                                   |                                     |                    |                                                          |\n|                                   |                                   |                                     | Example 2: No      |                                                          |\n+-----------------------------------+-----------------------------------+-------------------------------------+--------------------+----------------------------------------------------------+\n| [Scenario 2: Advanced Feature]    | Example: [Yes](../R/example_link) | Example: [Yes](../SAS/example_link) | Example 3: Partial | Special considerations for data structure or assumptions |\n+-----------------------------------+-----------------------------------+-------------------------------------+--------------------+----------------------------------------------------------+\n\n## Prerequisites: R Packages\n\nList the R packages required for this analysis. Include a brief description if necessary.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Example R packages required\nlibrary() # Call what packages are needed\nlibrary()\n```\n:::\n\n\n\n## Example Data\n\nProvide an example of the dataset being used. For simulated / dummy datasets please provide some context on how you construct the dataset and its relevance to the methodology. For real data please provide the code for how these data can be accessed and a reference that describes the data source.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Simulate an example dataset for Poisson Regression\nset.seed(123)\nexample_data <- data.frame(\n  count = rpois(100, lambda = 2),\n  predictor = rnorm(100)\n)\n\n# Display the first few rows of the dataset\nhead(example_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  count   predictor\n1     1  0.25331851\n2     3 -0.02854676\n3     2 -0.04287046\n4     4  1.36860228\n5     4 -0.22577099\n6     0  1.51647060\n```\n\n\n:::\n:::\n\n\n\n``` sas\n/* Example dataset in SAS */\ndata example_data;\n  do id = 1 to 100;\n    count = ranpoi(123, 2); /* random Poisson variable */\n    predictor = rannor(123); /* random normal variable */\n    output;\n  end;\nrun;\n\n/* Display the first few rows of the dataset */\nproc print data=example_data(obs=10);\nrun;\n```\n\n## Analysis Scenarios\n\n### Scenario 1: Basic Functionality\n\nProvide a detailed description of the scenario.\n\n#### SAS Code Example\n\n``` sas\n/* SAS code for basic Poisson Regression */\nproc genmod data=example_data;\n  class predictor;\n  model count = predictor / dist=poisson link=log;\nrun;\n```\n\nDescribe key options utilized in the code, along with a screenshot showcasing the output.\n\n#### R Code Example\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# R code for basic Poisson Regression\nexample_model <- glm(count ~ predictor, family = poisson(link = \"log\"), data = example_data)\n\n# Summary of the model\nsummary(example_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = count ~ predictor, family = poisson(link = \"log\"), \n    data = example_data)\n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  0.70395    0.07041   9.998   <2e-16 ***\npredictor    0.01897    0.07320   0.259    0.796    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 110.60  on 99  degrees of freedom\nResidual deviance: 110.53  on 98  degrees of freedom\nAIC: 343.61\n\nNumber of Fisher Scoring iterations: 5\n```\n\n\n:::\n:::\n\n\n\nDescribe key options utilized in the code, along with a screenshot showcasing the output.\n\n#### Results Comparison\n\nProvide a detailed comparison of the results obtained from both SAS and R. Highlight any differences and provide explanations if possible.\n\n| Statistic                          | R Result | SAS Result | Match | Notes |\n|------------------------------------|----------|------------|-------|-------|\n| Degrees of Freedom                 | 98       | 98         | Yes   |       |\n| Coefficient Estimate for Predictor | 0.1      | 0.1        | Yes   |       |\n| p-value                            | 0.05     | 0.05       | Yes   |       |\n\n### Scenario 2: Advanced Feature\n\nProvide a detailed description of the scenario. **Example:** Address specific advanced features or configurations that may be necessary for more complex analyses.\n\n#### SAS Code Example\n\n``` sas\n/* SAS code for handling overdispersion */\nproc genmod data=example_data;\n  class predictor;\n  model count = predictor / dist=poisson link=log scale=pearson;\nrun;\n```\n\nDescribe key options utilized in the code, along with a screenshot showcasing the output.\n\n#### R Code Example\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# R code for handling overdispersion\nalternative_model <- glm(count ~ predictor, family = quasipoisson(link = \"log\"), data = example_data)\n\n# Summary of the alternative model\nsummary(alternative_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = count ~ predictor, family = quasipoisson(link = \"log\"), \n    data = example_data)\n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  0.70395    0.06969  10.101   <2e-16 ***\npredictor    0.01897    0.07245   0.262    0.794    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for quasipoisson family taken to be 0.9797449)\n\n    Null deviance: 110.60  on 99  degrees of freedom\nResidual deviance: 110.53  on 98  degrees of freedom\nAIC: NA\n\nNumber of Fisher Scoring iterations: 5\n```\n\n\n:::\n:::\n\n\n\nDescribe key options utilized in the code, along with a screenshot showcasing the output.\n\n#### Results Comparison\n\nProvide a detailed comparison of the results obtained from both SAS and R. Highlight any differences and provide explanations if possible.\n\n| Statistic                          | R Result | SAS Result | Match | Notes |\n|------------------------------------|----------|------------|-------|-------|\n| Degrees of Freedom                 | 98       | 98         | Yes   |       |\n| Coefficient Estimate for Predictor | 0.1      | 0.1        | Yes   |       |\n| p-value                            | 0.05     | 0.05       | Yes   |       |\n\n## Special Considerations\n\nAddress any additional features or settings that need to be considered. This might include specific configuration settings, handling of special cases, or performance considerations.\n\n**Example:** For handling overdispersion in Poisson Regression, SAS provides the `scale` option in PROC GENMOD, while in R, one may have to switch to a quasi-Poisson family or use negative binomial regression.\n\n## Summary and Recommendation\n\nSummarize the key findings from the analysis. Highlight any major differences observed and offer recommendations on which software/packages to use. Provide guidance on how to interpret the differences between the results obtained from various software of packages.\n\n## Troubleshooting and Edge Cases\n\nList potential issues that users may encounter and propose solutions or troubleshooting steps.\n\n**Example:**\n\n-   **Issue:** Non-convergence in Poisson Regression.\n\n-   **Solution:** Check for multicollinearity among predictors, scale the predictors, or switch to a more appropriate model family.\n\n## Additional References\n\nProvide references and additional reading materials for both R and SAS documentation related to the analysis.\n\n**R Documentation:**\n\n-   `glm` function: <https://www.rdocumentation.org/packages/stats/versions/3.6.2/topics/glm>\n\n**SAS Documentation:**\n\n-   `PROC GENMOD`: <https://documentation.sas.com/doc/en/statcdc/14.2/statug/statug_genmod_overview.htm>\n\n## Appendix (Optional)\n\nInclude any additional information, extended examples, or advanced topics that may be helpful for expert users.\n\nThis template is designed to be comprehensive and flexible, able to accommodate multiple scenarios and diverse datasets. It ensures that each section clearly communicates the necessary information and comparisons, making it easier for users to understand and apply the analyses appropriately across both R and SAS platforms.\n\n::: {.callout-note collapse=\"true\" title=\"Session Info\"}\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.4.3 (2025-02-28)\n os       Ubuntu 24.04.2 LTS\n system   x86_64, linux-gnu\n ui       X11\n language (EN)\n collate  C.UTF-8\n ctype    C.UTF-8\n tz       Europe/London\n date     2025-03-13\n pandoc   NA (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n ! package     * version date (UTC) lib source\n P cli           3.6.3   2024-06-21 [?] RSPM (R 4.4.0)\n P digest        0.6.37  2024-08-19 [?] RSPM (R 4.4.0)\n P evaluate      1.0.0   2024-09-17 [?] RSPM (R 4.4.0)\n P fastmap       1.2.0   2024-05-15 [?] RSPM (R 4.4.0)\n P htmltools     0.5.8.1 2024-04-04 [?] RSPM (R 4.4.0)\n P htmlwidgets   1.6.4   2023-12-06 [?] RSPM (R 4.4.0)\n P jsonlite      1.8.9   2024-09-20 [?] RSPM (R 4.4.0)\n P knitr         1.48    2024-07-07 [?] RSPM (R 4.4.0)\n   renv          1.0.10  2024-10-05 [1] RSPM (R 4.4.3)\n P rlang         1.1.4   2024-06-04 [?] RSPM (R 4.4.0)\n P rmarkdown     2.28    2024-08-17 [?] RSPM (R 4.4.0)\n P sessioninfo   1.2.2   2021-12-06 [?] RSPM (R 4.4.0)\n P xfun          0.48    2024-10-03 [?] RSPM (R 4.4.0)\n P yaml          2.3.10  2024-07-26 [?] RSPM (R 4.4.0)\n\n [1] /home/michael/source/CAMIS/renv/library/linux-ubuntu-noble/R-4.4/x86_64-pc-linux-gnu\n [2] /opt/R/4.4.3/lib/R/library\n\n P ── Loaded and on-disk path mismatch.\n\n─ External software ──────────────────────────────────────────────────────────\n setting value\n SAS     9.04.01M7P080520\n\n──────────────────────────────────────────────────────────────────────────────\n```\n\n\n:::\n:::\n\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}