---
title: "CAMIS - A PHUSE DVOST Working Group"
execute: 
  freeze: false
---

# Introduction to CAMIS

[Comparing Analysis Method Implementations in Software](about.qmd) (CAMIS) is a cross-industry PHUSE DVOST Working Group, run in collaboration with members from [PHUSE](https://phuse.global/), [PSI](https://psiaims.github.io/website/), ASA and IASCT. In addition to issue comments, which are hosted in the [GitHub Repository](https://github.com/PSIAIMS/CAMIS/issues), we meet monthly on the 2nd Monday of each month. If you would like to join us please contact us at [workinggroups\@phuse.global](mailto:workinggroups@phuse.global).

### Motivation

The goal of this project is to demystify conflicting results in statistical analysis methods and results between primarily **SAS**, **R**, and **Python** programming languages by providing comparisons and comprehensive explanations of similarities and differences. Many discrepancies have been discovered in statistical analysis results between these and other programming languages. The differences in results are due to fundamental approaches implemented by each language, which are each correct in their own right. The fact that these differences exist is a challenge, especially related to sponsor companies when submitting to a regulatory agency.

In its [Statistical Software Clarifying Statement](https://fda.report/media/109552/Statistical-Software-Clarifying-Statement-PDF.pdf), the US Food and Drug Administration (FDA) states that it "FDA does not require use of any specific software for statistical analyses" and that "the computer software used for data management and statistical analysis should be reliable." Observing differences across languages can reduce the analyst's confidence in reliability and, by understanding the source of any discrepancies, one can reinstate confidence in reliability. CAMIS seeks to explore and explain some of the differences and similarities in statical analysis methods between these languages to ease these concerns.

### Repository

The repository below provides examples of statistical methodology in different software and languages, along with a comparison of the results obtained and description of any discrepancies.

```{r}
#| echo: false
#| message: false
library(gt)
library(tidyverse)
method_tbl <- read_csv("data/stat_method_tbl.csv", show_col_types = FALSE) |> 
  pivot_longer(cols = ends_with("links")) %>% 
  mutate(link_name = str_extract(value, "(?<=^\\[).*(?=\\])"),
         link_loc = str_extract(value, "(?<=\\().*(?=\\)$)"),
         link = if_else(!is.na(value), 
                        paste0('<a href=\"',
                       link_loc,
                       '.html">',
                       link_name, 
                       '</a>'), 
                       "")) |> 
  select(-value, -link_name, -link_loc) |>
  pivot_wider(names_from = name, values_from = link) |>
  mutate(across(ends_with("links"), ~map(., html)))


gt(method_tbl, groupname_col = "method_grp",
   rowname_col = "method_subgrp") |> 
      tab_options(row_group.as_column = TRUE) |>
    cols_label(method_subgrp = "Methods", 
               r_links = "R", 
               sas_links = "SAS", 
               python_links = "Python",
               comparison_links = "Comparison") |>
  tab_stubhead("Methods") 
  

```
