---
title: "Logistic Regression in R"
---

```{r}
#| echo: FALSE
#| include: FALSE
library(tidyverse)
library(gmodels)
```

In binary logistic regression, there is a single binary dependent variable, coded by an indicator variable. For example, if we represent a response as 1 and non-response as 0, then the corresponding probability of response, can be between 0 (certainly not a response) and 1 (certainly a response) - hence the labeling !

The logistic model models the log-odds of an event as a linear combination of one or more independent variables (explanatory variables). If we observed $(y_i, x_i),$ where $y_i$ is a Bernoulli variable and $x_i$ a vector of explanatory variables, the model for $\pi_i = P(y_i=1)$ is

$$
\text{logit}(\pi_i)= \log\left\{ \frac{\pi_i}{1-\pi_i}\right\} = \beta_0 + \beta x_i, i = 1,\ldots,n 
$$

The model is especially useful in case-control studies and leads to the effect of risk factors by odds ratios.

# Example: Lung Cancer Data

*Data source: Loprinzi CL. Laurie JA. Wieand HS. Krook JE. Novotny PJ. Kugler JW. Bartel J. Law M. Bateman M. Klatt NE. et al. Prospective evaluation of prognostic variables from patient-completed questionnaires. North Central Cancer Treatment Group. Journal of Clinical Oncology. 12(3):601-7, 1994.*

wgt_catn consists of: 1= patients a weight loss of zero or less, 0= patients with a weight loss of more than zero

trt01pn consists of 1= active treatment, 0 = placebo

# Model Fit

We analyze the event of weight gain (or staying the same weight) in lung cancer patients in dependency of treatment (active or placebo), age, sex, ECOG performance score and calories consumed at meals. One of the most important things to remember is to ensure you tell R what your event is and what treatment comparison you are doing Active / Placebo or Placebo/Active! The easiest way to do this is to have event (or non-reference treatment) as 1, and non-event (reference treatment) as 0. Hence we will use the wt_catn and trt01pn variables.

```{r}
lung<-read.csv("../data/lung_cancer.csv")
head(lung)
m1 <- glm(wt_catn ~ trt01pn + age + sex + ph.ecog + meal.cal, data = lung, family = binomial(link="logit"))
summary(m1)
```

The model summary contains the parameter estimates $\beta_j$ for each explanatory variable $x_j$, corresponding to the log-odds for the response variable to take the value $1$, conditional on all other explanatory variables remaining constant. For better interpretation, we can exponentiate these estimates, to obtain estimates for the odds instead and provide 95% confidence intervals.

```{r}
# model coefficients summary
summary(m1)$coefficients

## Wald confidence limits
cbind(est = exp(coef(m1)), 
          exp(confint.default(m1)))
## profile-likelihood limits
cbind(est = exp(coef(m1)), 
          exp(confint(m1)))


```

NOTE: that there are two types of confidence intervals that you can calculate. Function `confint.default` gives the Wald confidence limits, which is the default option in SAS `PROC LOGISTIC` procedure; whereas `confint` gives the profile-likelihood limits.

# Model Comparison

To compare two logistic models, the `residual deviances` (-2 \* log likelihoods) are compared against a $\chi^2$-distribution with degrees of freedom calculated using the difference in the two models' parameters. Below, the only difference is the inclusion/exclusion of age in the model, hence we test using $\chi^2$ with 1 df. Here testing at the 5% level.

```{r}
m2 <- glm(wt_catn ~ trt01pn + sex + ph.ecog + meal.cal, data = lung, family = binomial(link="logit"))
summary(m2)

anova(m1, m2, test = "LRT")
```

Stackexchange [here](https://stats.stackexchange.com/questions/59879/logistic-regression-anova-chi-square-test-vs-significance-of-coefficients-ano) has a good article describing this method and the difference between comparing 2 models using the likelihood ratio tests versus using wald tests and Pr\>chisq (from the maximum likelihood estimate). Note: `anova(m1, m2, test = "Chisq")` and using `test="LRT"` as above are synonymous in this context.

# Prediction

Predictions from the model for the log-odds of a patient with new data to experience a weight loss are derived using `predict()`:

```{r}
# new female, symptomatic but completely ambulatory patient consuming 2500 calories
new_pt <- data.frame(trt01pn=1, sex=2, ph.ecog=1, meal.cal=2500)
predict(m2, new_pt, type = "response")
```

# Contrast statements for 2 or more treatments

To create contrasts, you can use the `fit.contrast()` function from the `gmodels` package.

This can be used with lm and glm objects:

Here if we use the 3 level treatment variable (dose_id), we have 1=10mg, 2=20mg doses for active treatment and then 3= placebo which is 0mg.

You would fit the model as above, followed by `fit.contrast()`. This is effective testing the null hypothesis that 0.5*dose10mg + 0.5* dose20mg - placebo = 0.

```{r}

lung2<-lung |> 
    mutate(dose_id2 = as.factor(lung$dose_id))

m3 <- glm (wt_catn ~ dose_id2 + age + sex + ph.ecog + meal.cal, data = lung2, family = binomial(link="logit"))

fit.contrast (m3,'dose_id2',c(0.5,0.5,-1),conf.int=0.95)
```

# Reference

```{r}
#\| echo: false

#List all the packages needed

si <- sessioninfo::session_info(c('tidyverse','gmodels')) 
si

```
