---
title: "Wilcoxon Rank Sum (Mann Whitney-U) in R"
---

```{r}
#| echo: FALSE
#| include: FALSE
 library(tidyverse)
```

# Overview

Wilcoxon rank sum test, or equivalently, Mann-Whitney U-test is a rank based non-parametric method. The aim is to compare two independent groups of observations. Under certain scenarios, it can be thought of as a test for median differences, however this is only valid when: 1) both samples are independent and identically distributed (same dispersion, same shape, not necessarily normal) and 2) are symmetric around their medians.

Generally, with two samples of observations (A and B), the test uses the mean of each possible pair of observations in each group (including the pair of each value with itself) to test if the probability that (A\>B) \> probability (B\>A).

The Wilcoxon rank sum test is often presented alongside a Hodges-Lehmann estimate of the pseudo-median (the median of the Walsh averages), and an associated confidence interval for the pseudo-median.

A tie in the data exists when an observation in group A, has the same result as an observation in group B.


## Available R packages

There are two main implementations of the Wilcoxon rank sum test in R.

-   [stats::wilcox.test](https://www.rdocumentation.org/packages/stats/versions/3.6.2/topics/wilcox.test)

-   [coin::wilcox_test()](https://cran.r-project.org/web/packages/coin/coin.pdf)

The `stats` package implements various classic statistical tests, including Wilcoxon rank sum test. Although this is arguably the most commonly applied package, this one does not account for any ties in the data. To account for ties in the data, the `coin` package should be used.

```{r}
#| eval: false
#| echo: true
# x, y are two unpaired vectors. Do not necessary need to be of the same length.
stats::wilcox.test(x, y, paired = F)
```

## Example: Birth Weight

*Data source: Table 30.4, Kirkwood BR. and Sterne JAC. Essentials of medical statistics. Second Edition. ISBN 978-0-86542-871-3*

Comparison of birth weights (kg) of children born to 15 non-smokers with those of children born to 14 heavy smokers.

```{r}
#| eval: true
#| echo: true
# bw_ns: non smokers
# bw_s: smokers
bw_ns <- c(3.99, 3.89, 3.6, 3.73, 3.31, 
            3.7, 4.08, 3.61, 3.83, 3.41, 
            4.13, 3.36, 3.54, 3.51, 2.71)
bw_s <- c(3.18, 2.74, 2.9, 3.27, 3.65, 
           3.42, 3.23, 2.86, 3.6, 3.65, 
           3.69, 3.53, 2.38, 2.34)
```

Can visualize the data on two histograms. Red lines indicate the location of medians.

```{r}
#| eval: true
#| echo: true
par(mfrow =c(1,2))
hist(bw_ns, main = 'Birthweight: non-smokers')
abline(v = median(bw_ns), col = 'red', lwd = 2)
hist(bw_s, main = 'Birthweight: smokers')
abline(v = median(bw_s), col = 'red', lwd = 2)
```

It is possible to see that for non-smokers, the median birthweight is higher than those of smokers. Now we can formally test it with wilcoxon rank sum test.

The default test is two-sided with confidence level of 0.95, and does continuity correction.

```{r}
#| eval: true
#| echo: true
# default is two sided
stats::wilcox.test(bw_ns, bw_s, paired = FALSE, conf.int = TRUE)
```

We can also carry out a one-sided test, by specifying `alternative = greater` (if the first item is greater than the second).

```{r}
#| eval: true
#| echo: true
# default is two sided
stats::wilcox.test(bw_ns, bw_s, paired = FALSE, alternative = 'greater')
```

In order to account for the ties, `wilcox_test` from the {coin} package should be used. For this function, the data needs to be inputted via a formula where the right hand side is a factor, so we need to create a dataset. In order to get smokers - non-smokers we need to relevel the factors.

```{r}
#| eval: true
#| echo: true

smk_data <- data.frame(
  value = c(bw_ns, bw_s), 
  smoke = as.factor(rep(c("non", "smoke"), c(length(bw_ns), length(bw_s))))
) 

smk_data$smoke
smk_data$smoke <- forcats::fct_relevel(data$smoke, "smoke")

smk_data$smoke
```

Now the data is in the right shape we can run `wilcox_test`. In order to get the Hodges-Lehmann confidence intervals out, we need to include the `conf.int = TRUE` argument.(NOTE: the `conf.level` argument controls the confidence level, but must be used with `conf.int = TRUE` otherwise you won't get a confidence interval)

```{r}
coin::wilcox_test(value ~ smoke, data = data, conf.int  = TRUE)
```

In {coin} there is no option for a continuity correction and it is not done by default. {coin} can calculate exact and Monte Carlo conditional p-values using the `distribtuion` argument. The exact p-value should be used in small sample sizes as the normal approximation does not hold

```{r}

coin::wilcox_test(value ~ smoke, data = data, conf.int  = TRUE,
                  distribution = "exact")
```

## Useful References

-   [Methods and Formulae](https://support.minitab.com/en-us/minitab/help-and-how-to/statistics/nonparametrics/how-to/1-sample-wilcoxon/methods-and-formulas/methods-and-formulas)
-   [Mann Whitney is not about medians in general](https://github.com/adrianolszewski/Mann-Whitney-is-not-about-medians-in-general/blob/main/Mann_Whitney_Wilcoxon_fails_as_test_of_medians_literature.md)
-   [Relationship between walsh averages and WRS](https://stats.stackexchange.com/questions/215889/prove-the-relationship-between-walsh-averages-and-wilcoxon-signed-rank-test)
-   [Hodges Lehmann Problems](https://aakinshin.net/posts/r-hodges-lehmann-problems)