---
title: "ANOVA"
---

## Introduction

ANOVA (Analysis of Variance) is a statistical method used to compare the means of three or more groups to determine if at least one group mean is significantly different from the others. It helps to test hypotheses about group differences based on sample data.

The key assumptions include:

-   Independence of observations
-   Normality of the data (the distribution should be approximately normal)
-   Homogeneity of variances (similar variances across groups)

Common types include one-way ANOVA (one independent variable) and two-way ANOVA (two independent variables).

One-way ANOVA tests the effect of a single independent variable on a dependent variable (the grouping factor).

Two-way ANOVA tests the effect of two independent variables on a dependent variable and also examines if there is an interaction between the two independent variables.

### **Getting Started**

To demonstrate the various types of sums of squares, we'll create a data frame called `df_disease` taken from the SAS documentation. The corresponding data can be found [here](https://github.com/PSIAIMS/CAMIS/blob/main/data/sas_disease.csv).

```{r}
#| echo: false
#| include: false
library(tidyverse)
library(emmeans)
library(broom)
library(knitr)
library(car)

knitr::opts_chunk$set(echo = TRUE)

df_disease <- 
  read_csv(
    file = "../data/sas_disease.csv",
    col_types = cols(drug    = col_factor(),
                     disease = col_factor(),
                     y       = col_double()))
```

### The Model {.unnumbered}

For this example, we're testing for a significant difference in `stem_length` using ANOVA. In R, we're using `lm()` to run the ANOVA, and then using `broom::glance()` and `broom::tidy()` to view the results in a table format.

```{r}
lm_model <- lm(y ~ drug + disease + drug*disease, df_disease)
```

The `glance` function gives us a summary of the model diagnostic values.

```{r}
lm_model %>% 
  glance() 
```

The `tidy` function gives a summary of the model results.

```{r}
lm_model %>% tidy()
```

### The Results {.unnumbered}

You'll see that R print the individual results for each level of the drug and disease interaction. We can get the combined F table in R using the `anova()` function on the model object.

```{r}
lm_model %>% 
  anova() %>% 
  tidy() 
```

We can add a `Total` row, by using `add_row` and calculating the sum of the degrees of freedom and sum of squares.

```{r}
lm_model %>%
  anova() %>%
  tidy() %>%
  add_row(term = "Total", df = sum(.$df), sumsq = sum(.$sumsq)) %>% 
  kable()
```

### Sums of Squares Tables {.unnumbered}

### rstatix

Unfortunately, it is not easy to get the various types of sums of squares calculations in using functions from base R. However, the `rstatix` package offers a solution to produce these various sums of squares tables. For each type, you supply the original dataset and model to the. `anova_test` function, then specify the type and se `detailed = TRUE`.

#### Type I

```{r}
#| message: false
#| warning: false
df_disease %>% 
  rstatix::anova_test(
    y ~ drug + disease + drug*disease, 
    type = 1, 
    detailed = TRUE) %>% 
  rstatix::get_anova_table() %>% 
  kable()
```

#### Type II {.unnumbered}

```{r}
#| message: false
#| warning: false
df_disease %>% 
  rstatix::anova_test(
    y ~ drug + disease + drug*disease, 
    type = 2, 
    detailed = TRUE) %>% 
  rstatix::get_anova_table() %>% 
  kable()
```

#### Type III {.unnumbered}

```{r}
#| message: false
#| warning: false
df_disease %>% 
  rstatix::anova_test(
    y ~ drug + disease + drug*disease, 
    type = 3, 
    detailed = TRUE) %>% 
  rstatix::get_anova_table() %>% 
  kable()
```

#### Type IV {.unnumbered}

In R there is no equivalent operation to the `Type IV` sums of squares calculation in SAS.

### car

As an alternative to the `rstatix` package, you can use the `car` package, which is the R package for "An R Companion to Applied Regression, Third Edition, Sage 2019"

#### Type I {.unnumbered}

Type I can come directly from `stats`.

```{r}
anova(lm_model)
```

#### Type II {.unnumbered}

```{r}
Anova(lm_model, type = "II")
```

#### Type III {.unnumbered}

For type III tests the linear model we have used above does not make sense if the contrasts are orthogonal in the row-basis. The default contrast term `contr.treatment` are not, so the contrast should be changed. If you want to match the procedure in SAS use `{r} c("contr.sum", "contr.poly")`. This can be either set as an option.

```{r}
#| eval: FALSE 
options(contrasts = c("contr.sum", "contr.poly"))
```

Or, set directly in the model statement using the `contrasts` argument

```{r}
lm_model <- lm(y ~ drug + disease + drug*disease, df_disease, 
              contrasts = list(drug = "contr.sum", disease = "contr.poly"))
car::Anova(lm_model, type = "III")
```

`rstatix` does this is by default. The `rstatix` package uses the `car` package to do the anova calculation, but can be nicer to use as it handles the contrasts for you and is more "pipe-able".

### Contrasts {.unnumbered}
The easiest way to get contrasts in R is by using `emmeans`. For looking at contrast we are going to fit a different model on new data, that doesn't include an interaction term as it is easier to calculate contrasts without an interaction term. For this dataset we have three different drugs A, C, and E.
```{r}
df_trial<- read.csv("../data/drug_trial.csv")

lm(formula = post ~ pre + drug, data = df_trial) %>% 
  emmeans("drug") %>% 
  contrast(method = list(
    "C vs A"  = c(-1,  1, 0),
    "E vs CA" = c(-1, -1, 2)
  ))

```

